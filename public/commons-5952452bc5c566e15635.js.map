{"version":3,"sources":["webpack:///./src/components/Thumbnail/Thumbnail.tsx","webpack:///./src/components/Card/Card.tsx","webpack:///./src/components/Categories/Category.tsx","webpack:///./src/components/Tags/Tags.tsx","webpack:///./src/components/Pagenation/Pagenation.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/Header/Header.tsx","webpack:///./src/components/Footer/Footer.tsx","webpack:///./src/components/Layout/Layout.tsx","webpack:///(webpack)/buildin/global.js"],"names":["Thumbnail","mainText","subText","css","ThumbnailStyle","ThumbnailTextBoxStyle","Cards","data","post","articleWrapper","allMarkdownRemark","edges","map","node","to","fields","slug","key","id","articleStyle","src","frontmatter","featuredImage","childImageSharp","fluid","articleTextBoxStyle","title","excerpt","date","Category","categories","useStaticQuery","group","categoryWrapper","idx","totalCount","fieldValue","categoryStyle","className","Tags","tags","tagWrapper","tagBoxStyle","Pagenation","location","useLocation","page","pathname","parseInt","split","totalPage","Math","ceil","start","end","PagenationWrapper","PageArray","i","push","CreatePageNumber","v","activeClassName","Home","console","log","Layout","sectionStyle","contentStyle","styles","globalStyle","Header","HeaderStyle","HeaderBoxStyle","LogoStyle","UlStyle","Footer","FooterStyle","FooterBoxStyle","AboutStyle","AboutBoxStyle","children","containerStyle","g","this","Function","e","window","module","exports"],"mappings":"4NAQe,SAASA,EAAT,GAAiD,IAA5BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,QAC5C,OACE,mBAAKC,IAAKC,GACR,mBAAKD,IAAKE,GACR,sBAAKJ,GACJC,GAAW,qBAAIA,KAMxB,IAAME,EAAiB,CAAH,+PAgBdC,EAAwB,CAAH,0I,YC1BZ,SAASC,EAAT,GAAgC,IACvCC,EADuC,EAAfC,KAG9B,OACE,mBAAKL,IAAKM,GACPF,EAAKG,kBAAkBC,MAAMC,KAAI,8BAAGC,EAAH,EAAGA,KAAH,OAChC,YAAC,IAAD,CAAMC,GAAE,UAAED,EAAKE,cAAP,aAAE,EAAaC,KAAgBC,IAAKJ,EAAKK,IAC/C,uBAASf,IAAKgB,EAAcF,IAAKJ,EAAKK,IACpC,mBACEE,IAAG,UACDP,EAAKQ,mBADJ,iBACD,EAAkBC,qBADjB,iBACD,EAAiCC,uBADhC,iBACD,EAAkDC,aADjD,aACD,EACIJ,MAGR,mBAAKjB,IAAKsB,GACR,gCAAKZ,EAAKQ,mBAAV,aAAK,EAAkBK,OACvB,qBAAIb,EAAKc,SACT,+BAAId,EAAKQ,mBAAT,aAAI,EAAkBO,aASpC,IAAMnB,EAAiB,CAAH,sCAIdU,EAAe,CAAH,wJAaZM,EAAsB,CAAH,oFC3CV,SAASI,IACtB,IAaMC,EAbOC,YAAe,cAaJrB,kBAAkBsB,MAC1C,OACE,mBAAK7B,IAAK8B,GACR,8BACCH,EAAWlB,KACV,WAA2CsB,GAA3C,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,WAAf,OACE,mBAAKnB,IAAKiB,EAAK/B,IAAKkC,GAClB,iBAAGC,UAAU,kBAAkBF,GAC/B,iBAAGE,UAAU,mBAAmBH,QAQ5C,IAAMF,EAAkB,CAAH,qMAafI,EAAgB,CAAH,gNC3CJ,SAASE,IACtB,IAaMC,EAbOT,YAAe,aAaVrB,kBAAkBsB,MACpC,OACE,mBAAK7B,IAAKsC,GACR,8BACA,mBAAKtC,IAAKuC,GACPF,EAAK5B,KAAI,WAAsCsB,GAAtC,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,WAAf,OACR,mBAAKnB,IAAKiB,EAAKI,UAAU,OACvB,oBAAMA,UAAU,cAAcH,GAC9B,oBAAMG,UAAU,aAAaF,SAQzC,IAAMK,EAAa,CAAH,iLAaVC,EAAc,CAAH,8N,YCnCF,SAASC,EAAT,GAA2C,IAArBR,EAAqB,EAArBA,WAC7BS,EAAWC,wBAKXC,EACkB,MAAtBF,EAASG,SAAmB,EAAIC,SAASJ,EAASG,SAASE,MAAM,KAAK,IAClEC,EAAYC,KAAKC,KAAKjB,EALd,GASRkB,EARQ,GAQCF,KAAKC,KAAKN,EARX,GAQ2B,GAAa,EAChDQ,EAAMD,EAAQ,EAAcH,EAAYA,EAAYG,EAAQ,EAElE,OACE,mBAAKlD,IAAKoD,GACR,sBACa,IAAVF,EAAc,YAAC,IAAD,CAAMvC,GAAE,WAAYuC,EAAQ,IAA5B,MAA6C,KA1BpE,SAA0BA,EAAeC,GAEvC,IADA,IAAME,EAAY,GACTC,EAAIJ,EAAOI,GAAKH,EAAKG,IAC5BD,EAAUE,KAAKD,GAEjB,OAAOD,EAsBAG,CAAiBN,EAAOC,GAAK1C,KAAI,SAACgD,EAAG1B,GAAJ,OAC1B,IAAN0B,EACE,kBAAI3C,IAAKiB,GACP,YAAC,IAAD,CAAMpB,GAAG,IAAI+C,gBAAgB,UAC1BD,IAIL,kBAAI3C,IAAKiB,GACP,YAAC,IAAD,CAAMpB,GAAE,UAAY8C,EAAKC,gBAAgB,UACtCD,OAKRP,EAAQ,EAAcH,EACrB,YAAC,IAAD,CAAMpC,GAAE,WAAYwC,EAAM,IAA1B,MACE,OAMZ,IAAMC,EAAoB,CAAH,kXC3CR,SAASO,EAAT,GAA+B,IAAfvD,EAAe,EAAfA,KACvB4B,EAAa5B,EAAKG,kBAAkByB,WAG1C,OAFA4B,QAAQC,IAAIzD,GAGV,YAAC0D,EAAA,EAAD,KACE,uBAAS9D,IAAK+D,GACZ,YAAClE,EAAD,CACEC,SAAS,gBACTC,QAAQ,kBAEV,mBAAKC,IAAKgE,GACR,mBAAK7B,UAAU,WACb,YAAC,EAAD,CAAM9B,KAAMD,IACZ,YAACoC,EAAD,CAAYR,WAAYA,KAE1B,mBAAKG,UAAU,QACb,YAACT,EAAD,MACA,YAACU,EAAD,SAIN,YAAC,IAAD,CAAQ6B,OAAQC,KAKf,IAAMA,EAAc,CAAH,qbAuClBH,EAAe,CAAH,+EAKZC,EAAe,CAAH,gI,0GCnFH,SAASG,IACtB,OACE,sBAAQnE,IAAKoE,GACX,mBAAKpE,IAAKqE,GACR,YAAC,IAAD,CAAM1D,GAAG,KACP,mBAAKM,IAAI,kBAAkBjB,IAAKsE,KAGlC,kBAAItE,IAAKuE,GACP,8BACA,mCACA,8BACA,gCAEF,4BAMR,IAAMH,EAAc,CAAH,mNAaXC,EAAiB,CAAH,qJAWdC,EAAY,CAAH,0DAKTC,EAAU,CAAH,8HClDE,SAASC,IACtB,OACE,sBAAQxE,IAAKyE,GACX,mBAAKzE,IAAK0E,GACR,mBAAK1E,IAAK2E,GACR,mBAAK1D,IAAI,oBACT,mBAAKjB,IAAK4E,GACR,kCACA,wGAKA,mBAAKzC,UAAU,YACb,mBAAKlB,IAAI,oBACT,mBAAKA,IAAI,mBACT,mBAAKA,IAAI,qBACT,mBAAKA,IAAI,uBAIf,iBAAGkB,UAAU,aAAb,sCAMR,IAAMsC,EAAc,CAAH,+GAMXC,EAAiB,CAAH,sHAWdC,EAAa,CAAH,oGAWVC,EAAgB,CAAH,+IChDJ,SAASd,EAAT,GAA2C,IAAzBe,EAAyB,EAAzBA,SAC/B,OACE,mBAAK7E,IAAK8E,GACR,YAACX,EAAD,MACCU,EACD,YAACL,EAAD,OAKN,IAAMM,EAAiB,CAAH,uP,mBCpBpB,IAAIC,EAGJA,EAAI,WACH,OAAOC,KADJ,GAIJ,IAECD,EAAIA,GAAK,IAAIE,SAAS,cAAb,GACR,MAAOC,GAEc,iBAAXC,SAAqBJ,EAAII,QAOrCC,EAAOC,QAAUN","file":"commons-5952452bc5c566e15635.js","sourcesContent":["import React from 'react'\nimport { css } from '@emotion/react'\n\ntype Props = {\n  mainText: string\n  subText?: string\n}\n\nexport default function Thumbnail({ mainText, subText }: Props) {\n  return (\n    <div css={ThumbnailStyle}>\n      <div css={ThumbnailTextBoxStyle}>\n        <h3>{mainText}</h3>\n        {subText && <p>{subText}</p>}\n      </div>\n    </div>\n  )\n}\n\nconst ThumbnailStyle = css`\n  background-image: linear-gradient(\n      0deg,\n      rgba(0, 0, 0, 0.5),\n      rgba(0, 0, 0, 0.5)\n    ),\n    url(/Image/Thumbnail.jpg);\n  background-size: cover;\n  background-position: center;\n\n  height: 30vh;\n  position: absolute;\n  width: 100%;\n  left: 0;\n`\n\nconst ThumbnailTextBoxStyle = css`\n  color: white;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  font-size: 2.5rem;\n`\n","import React from 'react';\nimport { css } from '@emotion/react';\nimport { Link } from 'gatsby';\nimport { PostListPEdges } from '../../../gatsby-type';\n\ntype Props = {\n  post: PostListPEdges;\n};\n\nexport default function Cards({ post }: Props) {\n  const data = post;\n\n  return (\n    <div css={articleWrapper}>\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <Link to={node.fields?.slug as string} key={node.id}>\n          <article css={articleStyle} key={node.id}>\n            <img\n              src={\n                node.frontmatter?.featuredImage?.childImageSharp?.fluid\n                  ?.src as string\n              }\n            />\n            <div css={articleTextBoxStyle}>\n              <h2>{node.frontmatter?.title}</h2>\n              <p>{node.excerpt}</p>\n              <p>{node.frontmatter?.date}</p>\n            </div>\n          </article>\n        </Link>\n      ))}\n    </div>\n  );\n}\n\nconst articleWrapper = css`\n  padding: 1rem;\n`;\n\nconst articleStyle = css`\n  background: #ffffff;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 20px;\n  padding: 2rem;\n  margin-bottom: 1.5rem;\n\n  display: flex;\n\n  /* img {\n    border-radius: 20px;\n  } */\n`;\nconst articleTextBoxStyle = css`\n  /* display: flex;\n  flex-direction: column;\n  justify-content: space-between; */\n  padding: 0 1.5rem;\n  font-size: 1.2rem;\n\n  > * {\n    margin-bottom: 0.6rem;\n  }\n`;\n","import React from 'react'\nimport { css } from '@emotion/react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\ntype CategoryType = {\n  totalCount: number\n  fieldValue: string\n}\n\nexport default function Category() {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark {\n          group(field: frontmatter___category) {\n            totalCount\n            fieldValue\n          }\n        }\n      }\n    `\n  )\n\n  const categories = data.allMarkdownRemark.group\n  return (\n    <div css={categoryWrapper}>\n      <h2>카테고리</h2>\n      {categories.map(\n        ({ totalCount, fieldValue }: CategoryType, idx: number) => (\n          <div key={idx} css={categoryStyle}>\n            <p className=\"category__name\">{fieldValue}</p>\n            <p className=\"category__count\">{totalCount}</p>\n          </div>\n        )\n      )}\n    </div>\n  )\n}\n\nconst categoryWrapper = css`\n  background: #ffffff;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  padding: 2rem;\n  margin-bottom: 3rem;\n  font-size: 1.2rem;\n\n  h2 {\n    text-align: center;\n    margin-bottom: 1rem;\n  }\n`\nconst categoryStyle = css`\n  display: flex;\n  font-size: 1.6rem;\n  padding: 0.5rem;\n\n  .category__name {\n    flex: 1 0 0;\n  }\n\n  .category__count {\n    background: #81d4fa;\n    border-radius: 25px;\n    width: 25px;\n    height: 25px;\n    text-align: center;\n    color: white;\n  }\n`\n","import React from 'react'\nimport { css } from '@emotion/react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\ntype TagType = {\n  totalCount: number\n  fieldValue: string\n}\n\nexport default function Tags() {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark {\n          group(field: frontmatter___tags) {\n            totalCount\n            fieldValue\n          }\n        }\n      }\n    `\n  )\n\n  const tags = data.allMarkdownRemark.group\n  return (\n    <div css={tagWrapper}>\n      <h2>Tags</h2>\n      <div css={tagBoxStyle}>\n        {tags.map(({ totalCount, fieldValue }: TagType, idx: number) => (\n          <div key={idx} className=\"tag\">\n            <span className=\"tag__count\">{totalCount}</span>\n            <span className=\"tag__name\">{fieldValue}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nconst tagWrapper = css`\n  background: #ffffff;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  padding: 2rem;\n  font-size: 1.2rem;\n\n  h2 {\n    text-align: center;\n    margin-bottom: 1rem;\n  }\n`\n\nconst tagBoxStyle = css`\n  display: flex;\n  flex-wrap: wrap;\n  font-size: 1.3rem;\n\n  .tag {\n    background: #e1f5fe;\n    border-radius: 15px;\n    padding: 6px;\n  }\n  .tag__count {\n    background: #81d4fa;\n    border-radius: 10px;\n    padding: 2px 5px;\n    margin-right: 3px;\n  }\n  .tag__name {\n  }\n`\n","import React from 'react';\nimport { css } from '@emotion/react';\nimport { useLocation } from '@reach/router';\nimport { Link } from 'gatsby';\n\ntype Props = {\n  totalCount: number;\n};\n\nfunction CreatePageNumber(start: number, end: number): Array<number> {\n  const PageArray = [];\n  for (let i = start; i <= end; i++) {\n    PageArray.push(i);\n  }\n  return PageArray;\n}\n\nexport default function Pagenation({ totalCount }: Props) {\n  const location = useLocation(); // url 정보를 가져오기 위해\n\n  const limit = 5; // 페이지당 5개씩\n  const count = 5; // 페이지네이션 번호가 5개씩 끊어서 보여주기\n\n  const page =\n    location.pathname === '/' ? 1 : parseInt(location.pathname.split('/')[2]); // 현재 페이지\n  const totalPage = Math.ceil(totalCount / limit); // 총 페이지 수\n\n  // 5개씩 페이지네이션 할 예정\n  // 예를 들어 3이면 1~5까지. 근데 totalPage가 4라면 1~4까지\n  const start = (Math.ceil(page / count) - 1) * count + 1;\n  const end = start + (count - 1) > totalPage ? totalPage : start + (count - 1);\n\n  return (\n    <div css={PagenationWrapper}>\n      <ul>\n        {start !== 1 ? <Link to={`/pages/${start - 1}`}>👈</Link> : null}\n        {CreatePageNumber(start, end).map((v, idx) =>\n          v === 1 ? (\n            <li key={idx}>\n              <Link to=\"/\" activeClassName=\"active\">\n                {v}\n              </Link>\n            </li>\n          ) : (\n            <li key={idx}>\n              <Link to={`/pages/${v}`} activeClassName=\"active\">\n                {v}\n              </Link>\n            </li>\n          )\n        )}\n        {start + (count - 1) < totalPage ? (\n          <Link to={`/pages/${end + 1}`}>👉</Link>\n        ) : null}\n      </ul>\n    </div>\n  );\n}\n\nconst PagenationWrapper = css`\n  margin: 2rem 0 4rem;\n\n  ul {\n    display: flex;\n    flex-wrap: wrap;\n    list-style: none;\n    align-items: center;\n    justify-content: center;\n  }\n\n  li {\n    background: #81d4fa;\n    border-radius: 50px;\n    width: 3.3rem;\n    height: 3.3rem;\n    text-align: center;\n    color: white;\n    margin: 0 1rem;\n\n    cursor: pointer;\n  }\n\n  a {\n    font-size: 2rem;\n    padding: 0.4rem 1.2rem;\n  }\n\n  a.active {\n    background: #03a9f4;\n    border-radius: 50px;\n  }\n\n  img {\n    padding: 0 1rem;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\r\nimport { Global, css } from '@emotion/react';\r\nimport { graphql } from 'gatsby';\r\n\r\nimport Layout from '../components/Layout';\r\nimport Thumbnail from '../components/Thumbnail';\r\nimport Card from '../components/Card';\r\nimport Category from '../components/Categories';\r\nimport Tags from '../components/Tags';\r\nimport Pagenation from '../components/Pagenation';\r\nimport { PostListPQuery } from '../../gatsby-type';\r\n\r\ntype Props = {\r\n  data: PostListPQuery;\r\n};\r\n\r\nexport default function Home({ data }: Props) {\r\n  const totalCount = data.allMarkdownRemark.totalCount;\r\n  console.log(data);\r\n\r\n  return (\r\n    <Layout>\r\n      <section css={sectionStyle}>\r\n        <Thumbnail\r\n          mainText=\"방문해주셔서 감사합니다.\"\r\n          subText=\"소설읽는 개발자 입니다.\"\r\n        />\r\n        <div css={contentStyle}>\r\n          <div className=\"content\">\r\n            <Card post={data} />\r\n            <Pagenation totalCount={totalCount} />\r\n          </div>\r\n          <div className=\"side\">\r\n            <Category />\r\n            <Tags />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <Global styles={globalStyle} />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport const globalStyle = css`\r\n  // --font-primary:\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  a {\r\n    color: inherit;\r\n    text-decoration: none;\r\n  }\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n    font-size: 62.5%; // 10px/16 = 62.5% -> 1rem = 10px\r\n  }\r\n\r\n  body {\r\n    // font-family: $font-primary;\r\n    background: linear-gradient(139.17deg, #f5f5f5 0%, #bdbdbd 100%), #bdbdbd;\r\n    font-weight: 300;\r\n    line-height: 1.6;\r\n  }\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 1.6rem;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: rgba(147, 161, 161, 0.75);\r\n    border-radius: 5px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background: none;\r\n  }\r\n`;\r\n\r\nconst sectionStyle = css`\r\n  grid-column: center-start / center-end;\r\n  min-height: 100rem;\r\n`;\r\n\r\nconst contentStyle = css`\r\n  margin-top: 33vh;\r\n  display: flex;\r\n\r\n  .side {\r\n    flex-basis: 50%;\r\n    padding: 1rem;\r\n\r\n    height: 100%;\r\n    position: sticky;\r\n    top: 100px;\r\n  }\r\n`;\r\n\r\nexport const query = graphql`\r\n  query PostListP($skip: Int) {\r\n    allMarkdownRemark(\r\n      sort: { fields: frontmatter___date, order: DESC }\r\n      limit: 5\r\n      skip: $skip\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n            featuredImage {\r\n              childImageSharp {\r\n                fluid(maxWidth: 120, maxHeight: 120) {\r\n                  src\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\nimport { css } from '@emotion/react';\nimport { Link } from 'gatsby';\n\nexport default function Header() {\n  return (\n    <header css={HeaderStyle}>\n      <div css={HeaderBoxStyle}>\n        <Link to=\"/\">\n          <img src=\"/Image/Logo.png\" css={LogoStyle} />\n        </Link>\n\n        <ul css={UlStyle}>\n          <li>Home</li>\n          <li>Categoies</li>\n          <li>Tags</li>\n          <li>About</li>\n        </ul>\n        <input />\n      </div>\n    </header>\n  );\n}\n\nconst HeaderStyle = css`\n  grid-column: full-start / full-end;\n  height: 8vh;\n\n  position: sticky;\n  top: 0px;\n\n  z-index: 10;\n  box-shadow: rgb(0 0 0 / 8%) 0px 0px 8px;\n\n  backdrop-filter: blur(3px);\n  background-color: rgba(255, 255, 255, 0.562);\n`;\nconst HeaderBoxStyle = css`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  max-width: 120rem;\n  height: 100%;\n  margin: 0 auto;\n`;\n\nconst LogoStyle = css`\n  max-height: 10rem;\n  max-width: 25rem;\n`;\n\nconst UlStyle = css`\n  flex: 1 0 0;\n  list-style: none;\n  font-size: 1.8rem;\n\n  display: flex;\n  justify-content: space-around;\n  padding: 0 10rem;\n`;\n","import React from 'react';\nimport { css } from '@emotion/react';\n\nexport default function Footer() {\n  return (\n    <footer css={FooterStyle}>\n      <div css={FooterBoxStyle}>\n        <div css={AboutStyle}>\n          <img src=\"/Image/User.jpg\" />\n          <div css={AboutBoxStyle}>\n            <h3>소설읽는 개발자</h3>\n            <p>\n              개발을 잘하기 위해서가 아닌 개발을 즐기기 위해 노력하는\n              개발자입니다. 사소한 생각 정리부터 튜토리얼, 삽질기 정도를 주로\n              끄적이고 있습니다.\n            </p>\n            <div className=\"icon_box\">\n              <img src=\"/svg/github.svg\" />\n              <img src=\"/svg/email.svg\" />\n              <img src=\"/svg/blogger.svg\" />\n              <img src=\"/svg/notion.svg\" />\n            </div>\n          </div>\n        </div>\n        <p className=\"copyright\">© 2021 소설읽는개발자 Powered by Gatsby</p>\n      </div>\n    </footer>\n  );\n}\n\nconst FooterStyle = css`\n  grid-column: full-start / full-end;\n  background-color: #37474f;\n  color: white;\n  font-size: 1.4rem;\n`;\nconst FooterBoxStyle = css`\n  max-width: 120rem;\n  margin: 0 auto;\n  padding: 3rem;\n\n  .copyright {\n    letter-spacing: 2px;\n    text-align: center;\n  }\n`;\n\nconst AboutStyle = css`\n  display: flex;\n  flex-direction: row;\n\n  margin-bottom: 2rem;\n\n  img {\n    border-radius: 15px;\n  }\n`;\n\nconst AboutBoxStyle = css`\n  padding: 0 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  h3 {\n    font-size: 2rem;\n  }\n\n  p {\n    flex-basis: 50%;\n  }\n`;\n","import React from 'react'\nimport { css } from '@emotion/react'\n\nimport Header from '../Header'\nimport Footer from '../Footer'\n\ntype LayoutProps = {\n  children: React.ReactNode\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  return (\n    <div css={containerStyle}>\n      <Header />\n      {children}\n      <Footer />\n    </div>\n  )\n}\n\nconst containerStyle = css`\n  display: grid;\n  grid-template-columns:\n    [full-start] minmax(6rem, 1fr) [center-start] repeat(\n      8,\n      [col-start] minmax(min-content, 15rem) [col-end]\n    )\n    [center-end] minmax(6rem, 1fr) [full-end];\n\n  min-height: 100vh;\n`\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}