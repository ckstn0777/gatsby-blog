{"version":3,"sources":["webpack:///./src/components/Pagenation/Pagenation.tsx","webpack:///./src/components/Thumbnail/Thumbnail.tsx","webpack:///./node_modules/lunr/lunr.js","webpack:///./src/components/Tags/Tags.tsx","webpack:///./src/pages/index.tsx","webpack:///./node_modules/tiny-invariant/dist/tiny-invariant.esm.js","webpack:///./src/components/SearchModal/SearchModal.tsx","webpack:///./node_modules/react-lunr/dist/react-lunr.esm.js","webpack:///./src/components/Header/Header.tsx","webpack:///./src/components/Footer/Footer.tsx","webpack:///./src/components/Layout/Layout.tsx","webpack:///./src/components/Card/Card.tsx","webpack:///./src/components/Categories/Category.tsx"],"names":["Pagenation","pathname","totalCount","location","useLocation","page","parseInt","split","totalPage","Math","ceil","start","end","css","PagenationWrapper","to","PageArray","i","push","CreatePageNumber","map","v","idx","key","activeClassName","Thumbnail","mainText","subText","ThumbnailStyle","ThumbnailTextBoxStyle","global","step2list","step3list","C","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","porterStemmer","lunr","config","builder","Builder","pipeline","add","trimmer","stopWordFilter","stemmer","searchPipeline","call","build","version","utils","warn","this","message","console","asString","obj","toString","clone","Object","create","keys","length","val","Array","isArray","slice","TypeError","FieldRef","docRef","fieldName","stringValue","_stringValue","joiner","fromString","s","n","indexOf","fieldRef","prototype","undefined","Set","elements","complete","intersect","other","union","contains","empty","object","a","b","intersection","element","concat","idf","posting","documentCount","documentsWithTerm","x","log","abs","Token","str","metadata","update","fn","tokenizer","t","toLowerCase","len","tokens","sliceEnd","sliceStart","sliceLength","charAt","match","separator","tokenMetadata","Pipeline","_stack","registeredFunctions","registerFunction","label","warnIfFunctionNotRegistered","load","serialised","forEach","fnName","Error","fns","arguments","after","existingFn","newFn","pos","splice","before","remove","run","stackLength","memo","j","result","k","runString","token","reset","toJSON","Vector","_magnitude","positionForIndex","index","pivotPoint","floor","pivotIndex","insert","insertIdx","upsert","position","magnitude","sumOfSquares","elementsLength","sqrt","dot","otherVector","dotProduct","aLen","bLen","aVal","bVal","similarity","toArray","output","c","RegExp","w","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","test","replace","fp","exec","generateStopWordFilter","stopWords","words","reduce","stopWord","TokenSet","final","edges","id","_nextId","fromArray","arr","finish","root","fromClause","clause","fromFuzzyString","term","editDistance","stack","node","editsRemaining","frame","pop","noEditNode","char","insertionNode","substitutionNode","transposeNode","charA","charB","next","prefix","edge","_str","labels","sort","qNode","qEdges","qLen","nEdges","nLen","q","qEdge","nEdge","previousWord","uncheckedNodes","minimizedNodes","word","commonPrefix","minimize","child","nextNode","parent","downTo","childKey","Index","attrs","invertedIndex","fieldVectors","tokenSet","fields","search","queryString","query","QueryParser","parse","Query","matchingFields","queryVectors","termFieldCache","requiredMatches","prohibitedMatches","clauses","terms","clauseMatches","usePipeline","m","termTokenSet","expandedTerms","presence","REQUIRED","field","expandedTerm","termIndex","_index","fieldPosting","matchingDocumentRefs","termField","matchingDocumentsSet","PROHIBITED","boost","l","fieldMatch","matchingDocumentRef","matchingFieldRef","MatchData","allRequiredMatches","allProhibitedMatches","matchingFieldRefs","results","matches","isNegated","docMatch","fieldVector","score","matchData","combine","ref","serializedIndex","serializedVectors","serializedInvertedIndex","tokenSetBuilder","tuple","_ref","_fields","_documents","fieldTermFrequencies","fieldLengths","_b","_k1","metadataWhitelist","attributes","RangeError","number","k1","doc","extractor","fieldTerms","metadataKey","calculateAverageFieldLengths","fieldRefs","numberOfFields","accumulator","documentsWithField","averageFieldLength","createFieldVectors","fieldRefsLength","termIdfCache","fieldLength","termFrequencies","termsLength","fieldBoost","docBoost","scoreWithPrecision","tf","round","createTokenSet","use","args","unshift","apply","clonedMetadata","metadataKeys","otherMatchData","allFields","wildcard","String","NONE","LEADING","TRAILING","OPTIONAL","options","QueryParseError","name","QueryLexer","lexemes","escapeCharPositions","state","lexText","sliceString","subSlices","join","emit","type","escapeCharacter","EOS","width","ignore","backup","acceptDigitRun","charCode","charCodeAt","more","FIELD","TERM","EDIT_DISTANCE","BOOST","PRESENCE","lexField","lexer","lexTerm","lexEditDistance","lexBoost","lexEOS","termSeparator","currentClause","lexemeIdx","parseClause","peekLexeme","consumeLexeme","lexeme","nextClause","completedClause","parser","parsePresence","parseField","parseTerm","errorMessage","nextLexeme","possibleFields","f","parseEditDistance","parseBoost","isNaN","Tags","tags","useStaticQuery","allMarkdownRemark","group","tagWrapper","tagBoxStyle","fieldValue","className","Home","data","sectionStyle","contentStyle","post","styles","globalStyle","condition","SearchModal","onCloseModal","queryData","localSearchPages","store","useState","queryModal","setQueryModal","searchResult","setSearchResult","rawIndex","rawStore","JSON","useLunr","useEffect","onChangeQuery","useCallback","e","target","value","onSubmit","preventDefault","stopPropagation","SearchModalWrapper","onClick","SearchModalStyle","SearchFormStyle","onChange","placeholder","SearchResultWrapper","slug","title","Header","setQuery","modal","setModal","HeaderStyle","HeaderBoxStyle","src","LogoStyle","UlStyle","formStyle","Footer","FooterStyle","FooterBoxStyle","AboutStyle","AboutBoxStyle","Layout","children","containerStyle","Cards","articleWrapper","articleStyle","frontmatter","featuredImage","childImageSharp","fluid","articleTextBoxStyle","excerpt","date","Category","categories","categoryWrapper","categoryStyle"],"mappings":"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","file":"commons-67d3493f4c7e1de93729.js","sourcesContent":["import React from 'react';\nimport { css } from '@emotion/react';\nimport { useLocation } from '@reach/router';\nimport { Link } from 'gatsby';\n\ntype Props = {\n  totalCount: number;\n};\n\nfunction CreatePageNumber(start: number, end: number): Array<number> {\n  const PageArray = [];\n  for (let i = start; i <= end; i++) {\n    PageArray.push(i);\n  }\n  return PageArray;\n}\n\nfunction CurrentPage(pathname: string): number {\n  if (pathname === '/') {\n    return 1;\n  } else {\n    if (parseInt(pathname.split('/')[2])) {\n      return parseInt(pathname.split('/')[2]);\n    } else {\n      return 1;\n    }\n  }\n}\n\nexport default function Pagenation({ totalCount }: Props) {\n  const location = useLocation(); // url 정보를 가져오기 위해\n\n  const limit = 5; // 페이지당 5개씩\n  const count = 5; // 페이지네이션 번호가 5개씩 끊어서 보여주기\n\n  const page = CurrentPage(location.pathname);\n  const totalPage = Math.ceil(totalCount / limit); // 총 페이지 수\n\n  // 5개씩 페이지네이션 할 예정\n  // 예를 들어 3이면 1~5까지. 근데 totalPage가 4라면 1~4까지\n  const start = (Math.ceil(page / count) - 1) * count + 1;\n  const end = start + (count - 1) > totalPage ? totalPage : start + (count - 1);\n\n  return (\n    <div css={PagenationWrapper}>\n      <ul>\n        {start !== 1 ? <Link to={`/pages/${start - 1}`}>👈</Link> : null}\n        {CreatePageNumber(start, end).map((v, idx) =>\n          v === 1 ? (\n            <li key={idx}>\n              <Link to=\"/\" activeClassName=\"active\">\n                {v}\n              </Link>\n            </li>\n          ) : (\n            <li key={idx}>\n              <Link to={`/pages/${v}`} activeClassName=\"active\">\n                {v}\n              </Link>\n            </li>\n          )\n        )}\n        {start + (count - 1) < totalPage ? (\n          <Link to={`/pages/${end + 1}`}>👉</Link>\n        ) : null}\n      </ul>\n    </div>\n  );\n}\n\nconst PagenationWrapper = css`\n  margin: 2rem 0 4rem;\n\n  ul {\n    display: flex;\n    flex-wrap: wrap;\n    list-style: none;\n    align-items: center;\n    justify-content: center;\n  }\n\n  li {\n    background: #81d4fa;\n    border-radius: 50px;\n    width: 3.3rem;\n    height: 3.3rem;\n    text-align: center;\n    color: white;\n    margin: 0 1rem;\n\n    cursor: pointer;\n  }\n\n  a {\n    font-size: 2rem;\n    padding: 0.4rem 1.2rem;\n  }\n\n  a.active {\n    background: #03a9f4;\n    border-radius: 50px;\n  }\n\n  img {\n    padding: 0 1rem;\n  }\n`;\n","import React from 'react'\nimport { css } from '@emotion/react'\n\ntype Props = {\n  mainText: string\n  subText?: string\n}\n\nexport default function Thumbnail({ mainText, subText }: Props) {\n  return (\n    <div css={ThumbnailStyle}>\n      <div css={ThumbnailTextBoxStyle}>\n        <h3>{mainText}</h3>\n        {subText && <p>{subText}</p>}\n      </div>\n    </div>\n  )\n}\n\nconst ThumbnailStyle = css`\n  background-image: linear-gradient(\n      0deg,\n      rgba(0, 0, 0, 0.5),\n      rgba(0, 0, 0, 0.5)\n    ),\n    url(/Image/Thumbnail.jpg);\n  background-size: cover;\n  background-position: center;\n\n  height: 30vh;\n  position: absolute;\n  width: 100%;\n  left: 0;\n`\n\nconst ThumbnailTextBoxStyle = css`\n  color: white;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  font-size: 2.5rem;\n`\n","require(\"core-js/modules/es.array.reduce.js\");\n\n/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.9\n * Copyright (C) 2020 Oliver Nightingale\n * @license MIT\n */\n;\n\n(function () {\n  /**\n   * A convenience function for configuring and constructing\n   * a new lunr Index.\n   *\n   * A lunr.Builder instance is created and the pipeline setup\n   * with a trimmer, stop word filter and stemmer.\n   *\n   * This builder object is yielded to the configuration function\n   * that is passed as a parameter, allowing the list of fields\n   * and other builder parameters to be customised.\n   *\n   * All documents _must_ be added within the passed config function.\n   *\n   * @example\n   * var idx = lunr(function () {\n   *   this.field('title')\n   *   this.field('body')\n   *   this.ref('id')\n   *\n   *   documents.forEach(function (doc) {\n   *     this.add(doc)\n   *   }, this)\n   * })\n   *\n   * @see {@link lunr.Builder}\n   * @see {@link lunr.Pipeline}\n   * @see {@link lunr.trimmer}\n   * @see {@link lunr.stopWordFilter}\n   * @see {@link lunr.stemmer}\n   * @namespace {function} lunr\n   */\n  var lunr = function lunr(config) {\n    var builder = new lunr.Builder();\n    builder.pipeline.add(lunr.trimmer, lunr.stopWordFilter, lunr.stemmer);\n    builder.searchPipeline.add(lunr.stemmer);\n    config.call(builder, builder);\n    return builder.build();\n  };\n\n  lunr.version = \"2.3.9\";\n  /*!\n   * lunr.utils\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A namespace containing utils for the rest of the lunr library\n   * @namespace lunr.utils\n   */\n\n  lunr.utils = {};\n  /**\n   * Print a warning message to the console.\n   *\n   * @param {String} message The message to be printed.\n   * @memberOf lunr.utils\n   * @function\n   */\n\n  lunr.utils.warn = function (global) {\n    /* eslint-disable no-console */\n    return function (message) {\n      if (global.console && console.warn) {\n        console.warn(message);\n      }\n    };\n    /* eslint-enable no-console */\n  }(this);\n  /**\n   * Convert an object to a string.\n   *\n   * In the case of `null` and `undefined` the function returns\n   * the empty string, in all other cases the result of calling\n   * `toString` on the passed object is returned.\n   *\n   * @param {Any} obj The object to convert to a string.\n   * @return {String} string representation of the passed object.\n   * @memberOf lunr.utils\n   */\n\n\n  lunr.utils.asString = function (obj) {\n    if (obj === void 0 || obj === null) {\n      return \"\";\n    } else {\n      return obj.toString();\n    }\n  };\n  /**\n   * Clones an object.\n   *\n   * Will create a copy of an existing object such that any mutations\n   * on the copy cannot affect the original.\n   *\n   * Only shallow objects are supported, passing a nested object to this\n   * function will cause a TypeError.\n   *\n   * Objects with primitives, and arrays of primitives are supported.\n   *\n   * @param {Object} obj The object to clone.\n   * @return {Object} a clone of the passed object.\n   * @throws {TypeError} when a nested object is passed.\n   * @memberOf Utils\n   */\n\n\n  lunr.utils.clone = function (obj) {\n    if (obj === null || obj === undefined) {\n      return obj;\n    }\n\n    var clone = Object.create(null),\n        keys = Object.keys(obj);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i],\n          val = obj[key];\n\n      if (Array.isArray(val)) {\n        clone[key] = val.slice();\n        continue;\n      }\n\n      if (typeof val === 'string' || typeof val === 'number' || typeof val === 'boolean') {\n        clone[key] = val;\n        continue;\n      }\n\n      throw new TypeError(\"clone is not deep and does not support nested objects\");\n    }\n\n    return clone;\n  };\n\n  lunr.FieldRef = function (docRef, fieldName, stringValue) {\n    this.docRef = docRef;\n    this.fieldName = fieldName;\n    this._stringValue = stringValue;\n  };\n\n  lunr.FieldRef.joiner = \"/\";\n\n  lunr.FieldRef.fromString = function (s) {\n    var n = s.indexOf(lunr.FieldRef.joiner);\n\n    if (n === -1) {\n      throw \"malformed field ref string\";\n    }\n\n    var fieldRef = s.slice(0, n),\n        docRef = s.slice(n + 1);\n    return new lunr.FieldRef(docRef, fieldRef, s);\n  };\n\n  lunr.FieldRef.prototype.toString = function () {\n    if (this._stringValue == undefined) {\n      this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef;\n    }\n\n    return this._stringValue;\n  };\n  /*!\n   * lunr.Set\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A lunr set.\n   *\n   * @constructor\n   */\n\n\n  lunr.Set = function (elements) {\n    this.elements = Object.create(null);\n\n    if (elements) {\n      this.length = elements.length;\n\n      for (var i = 0; i < this.length; i++) {\n        this.elements[elements[i]] = true;\n      }\n    } else {\n      this.length = 0;\n    }\n  };\n  /**\n   * A complete set that contains all elements.\n   *\n   * @static\n   * @readonly\n   * @type {lunr.Set}\n   */\n\n\n  lunr.Set.complete = {\n    intersect: function intersect(other) {\n      return other;\n    },\n    union: function union() {\n      return this;\n    },\n    contains: function contains() {\n      return true;\n    }\n  };\n  /**\n   * An empty set that contains no elements.\n   *\n   * @static\n   * @readonly\n   * @type {lunr.Set}\n   */\n\n  lunr.Set.empty = {\n    intersect: function intersect() {\n      return this;\n    },\n    union: function union(other) {\n      return other;\n    },\n    contains: function contains() {\n      return false;\n    }\n  };\n  /**\n   * Returns true if this set contains the specified object.\n   *\n   * @param {object} object - Object whose presence in this set is to be tested.\n   * @returns {boolean} - True if this set contains the specified object.\n   */\n\n  lunr.Set.prototype.contains = function (object) {\n    return !!this.elements[object];\n  };\n  /**\n   * Returns a new set containing only the elements that are present in both\n   * this set and the specified set.\n   *\n   * @param {lunr.Set} other - set to intersect with this set.\n   * @returns {lunr.Set} a new set that is the intersection of this and the specified set.\n   */\n\n\n  lunr.Set.prototype.intersect = function (other) {\n    var a,\n        b,\n        elements,\n        intersection = [];\n\n    if (other === lunr.Set.complete) {\n      return this;\n    }\n\n    if (other === lunr.Set.empty) {\n      return other;\n    }\n\n    if (this.length < other.length) {\n      a = this;\n      b = other;\n    } else {\n      a = other;\n      b = this;\n    }\n\n    elements = Object.keys(a.elements);\n\n    for (var i = 0; i < elements.length; i++) {\n      var element = elements[i];\n\n      if (element in b.elements) {\n        intersection.push(element);\n      }\n    }\n\n    return new lunr.Set(intersection);\n  };\n  /**\n   * Returns a new set combining the elements of this and the specified set.\n   *\n   * @param {lunr.Set} other - set to union with this set.\n   * @return {lunr.Set} a new set that is the union of this and the specified set.\n   */\n\n\n  lunr.Set.prototype.union = function (other) {\n    if (other === lunr.Set.complete) {\n      return lunr.Set.complete;\n    }\n\n    if (other === lunr.Set.empty) {\n      return this;\n    }\n\n    return new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)));\n  };\n  /**\n   * A function to calculate the inverse document frequency for\n   * a posting. This is shared between the builder and the index\n   *\n   * @private\n   * @param {object} posting - The posting for a given term\n   * @param {number} documentCount - The total number of documents.\n   */\n\n\n  lunr.idf = function (posting, documentCount) {\n    var documentsWithTerm = 0;\n\n    for (var fieldName in posting) {\n      if (fieldName == '_index') continue; // Ignore the term index, its not a field\n\n      documentsWithTerm += Object.keys(posting[fieldName]).length;\n    }\n\n    var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5);\n    return Math.log(1 + Math.abs(x));\n  };\n  /**\n   * A token wraps a string representation of a token\n   * as it is passed through the text processing pipeline.\n   *\n   * @constructor\n   * @param {string} [str=''] - The string token being wrapped.\n   * @param {object} [metadata={}] - Metadata associated with this token.\n   */\n\n\n  lunr.Token = function (str, metadata) {\n    this.str = str || \"\";\n    this.metadata = metadata || {};\n  };\n  /**\n   * Returns the token string that is being wrapped by this object.\n   *\n   * @returns {string}\n   */\n\n\n  lunr.Token.prototype.toString = function () {\n    return this.str;\n  };\n  /**\n   * A token update function is used when updating or optionally\n   * when cloning a token.\n   *\n   * @callback lunr.Token~updateFunction\n   * @param {string} str - The string representation of the token.\n   * @param {Object} metadata - All metadata associated with this token.\n   */\n\n  /**\n   * Applies the given function to the wrapped string token.\n   *\n   * @example\n   * token.update(function (str, metadata) {\n   *   return str.toUpperCase()\n   * })\n   *\n   * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.\n   * @returns {lunr.Token}\n   */\n\n\n  lunr.Token.prototype.update = function (fn) {\n    this.str = fn(this.str, this.metadata);\n    return this;\n  };\n  /**\n   * Creates a clone of this token. Optionally a function can be\n   * applied to the cloned token.\n   *\n   * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.\n   * @returns {lunr.Token}\n   */\n\n\n  lunr.Token.prototype.clone = function (fn) {\n    fn = fn || function (s) {\n      return s;\n    };\n\n    return new lunr.Token(fn(this.str, this.metadata), this.metadata);\n  };\n  /*!\n   * lunr.tokenizer\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A function for splitting a string into tokens ready to be inserted into\n   * the search index. Uses `lunr.tokenizer.separator` to split strings, change\n   * the value of this property to change how strings are split into tokens.\n   *\n   * This tokenizer will convert its parameter to a string by calling `toString` and\n   * then will split this string on the character in `lunr.tokenizer.separator`.\n   * Arrays will have their elements converted to strings and wrapped in a lunr.Token.\n   *\n   * Optional metadata can be passed to the tokenizer, this metadata will be cloned and\n   * added as metadata to every token that is created from the object to be tokenized.\n   *\n   * @static\n   * @param {?(string|object|object[])} obj - The object to convert into tokens\n   * @param {?object} metadata - Optional metadata to associate with every token\n   * @returns {lunr.Token[]}\n   * @see {@link lunr.Pipeline}\n   */\n\n\n  lunr.tokenizer = function (obj, metadata) {\n    if (obj == null || obj == undefined) {\n      return [];\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.map(function (t) {\n        return new lunr.Token(lunr.utils.asString(t).toLowerCase(), lunr.utils.clone(metadata));\n      });\n    }\n\n    var str = obj.toString().toLowerCase(),\n        len = str.length,\n        tokens = [];\n\n    for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {\n      var char = str.charAt(sliceEnd),\n          sliceLength = sliceEnd - sliceStart;\n\n      if (char.match(lunr.tokenizer.separator) || sliceEnd == len) {\n        if (sliceLength > 0) {\n          var tokenMetadata = lunr.utils.clone(metadata) || {};\n          tokenMetadata[\"position\"] = [sliceStart, sliceLength];\n          tokenMetadata[\"index\"] = tokens.length;\n          tokens.push(new lunr.Token(str.slice(sliceStart, sliceEnd), tokenMetadata));\n        }\n\n        sliceStart = sliceEnd + 1;\n      }\n    }\n\n    return tokens;\n  };\n  /**\n   * The separator used to split a string into tokens. Override this property to change the behaviour of\n   * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n   *\n   * @static\n   * @see lunr.tokenizer\n   */\n\n\n  lunr.tokenizer.separator = /[\\s\\-]+/;\n  /*!\n   * lunr.Pipeline\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * lunr.Pipelines maintain an ordered list of functions to be applied to all\n   * tokens in documents entering the search index and queries being ran against\n   * the index.\n   *\n   * An instance of lunr.Index created with the lunr shortcut will contain a\n   * pipeline with a stop word filter and an English language stemmer. Extra\n   * functions can be added before or after either of these functions or these\n   * default functions can be removed.\n   *\n   * When run the pipeline will call each function in turn, passing a token, the\n   * index of that token in the original list of all tokens and finally a list of\n   * all the original tokens.\n   *\n   * The output of functions in the pipeline will be passed to the next function\n   * in the pipeline. To exclude a token from entering the index the function\n   * should return undefined, the rest of the pipeline will not be called with\n   * this token.\n   *\n   * For serialisation of pipelines to work, all functions used in an instance of\n   * a pipeline should be registered with lunr.Pipeline. Registered functions can\n   * then be loaded. If trying to load a serialised pipeline that uses functions\n   * that are not registered an error will be thrown.\n   *\n   * If not planning on serialising the pipeline then registering pipeline functions\n   * is not necessary.\n   *\n   * @constructor\n   */\n\n  lunr.Pipeline = function () {\n    this._stack = [];\n  };\n\n  lunr.Pipeline.registeredFunctions = Object.create(null);\n  /**\n   * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token\n   * string as well as all known metadata. A pipeline function can mutate the token string\n   * or mutate (or add) metadata for a given token.\n   *\n   * A pipeline function can indicate that the passed token should be discarded by returning\n   * null, undefined or an empty string. This token will not be passed to any downstream pipeline\n   * functions and will not be added to the index.\n   *\n   * Multiple tokens can be returned by returning an array of tokens. Each token will be passed\n   * to any downstream pipeline functions and all will returned tokens will be added to the index.\n   *\n   * Any number of pipeline functions may be chained together using a lunr.Pipeline.\n   *\n   * @interface lunr.PipelineFunction\n   * @param {lunr.Token} token - A token from the document being processed.\n   * @param {number} i - The index of this token in the complete list of tokens for this document/field.\n   * @param {lunr.Token[]} tokens - All tokens for this document/field.\n   * @returns {(?lunr.Token|lunr.Token[])}\n   */\n\n  /**\n   * Register a function with the pipeline.\n   *\n   * Functions that are used in the pipeline should be registered if the pipeline\n   * needs to be serialised, or a serialised pipeline needs to be loaded.\n   *\n   * Registering a function does not add it to a pipeline, functions must still be\n   * added to instances of the pipeline for them to be used when running a pipeline.\n   *\n   * @param {lunr.PipelineFunction} fn - The function to check for.\n   * @param {String} label - The label to register this function with\n   */\n\n  lunr.Pipeline.registerFunction = function (fn, label) {\n    if (label in this.registeredFunctions) {\n      lunr.utils.warn('Overwriting existing registered function: ' + label);\n    }\n\n    fn.label = label;\n    lunr.Pipeline.registeredFunctions[fn.label] = fn;\n  };\n  /**\n   * Warns if the function is not registered as a Pipeline function.\n   *\n   * @param {lunr.PipelineFunction} fn - The function to check for.\n   * @private\n   */\n\n\n  lunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n    var isRegistered = fn.label && fn.label in this.registeredFunctions;\n\n    if (!isRegistered) {\n      lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn);\n    }\n  };\n  /**\n   * Loads a previously serialised pipeline.\n   *\n   * All functions to be loaded must already be registered with lunr.Pipeline.\n   * If any function from the serialised data has not been registered then an\n   * error will be thrown.\n   *\n   * @param {Object} serialised - The serialised pipeline to load.\n   * @returns {lunr.Pipeline}\n   */\n\n\n  lunr.Pipeline.load = function (serialised) {\n    var pipeline = new lunr.Pipeline();\n    serialised.forEach(function (fnName) {\n      var fn = lunr.Pipeline.registeredFunctions[fnName];\n\n      if (fn) {\n        pipeline.add(fn);\n      } else {\n        throw new Error('Cannot load unregistered function: ' + fnName);\n      }\n    });\n    return pipeline;\n  };\n  /**\n   * Adds new functions to the end of the pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.\n   */\n\n\n  lunr.Pipeline.prototype.add = function () {\n    var fns = Array.prototype.slice.call(arguments);\n    fns.forEach(function (fn) {\n      lunr.Pipeline.warnIfFunctionNotRegistered(fn);\n\n      this._stack.push(fn);\n    }, this);\n  };\n  /**\n   * Adds a single function after a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n   * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n   */\n\n\n  lunr.Pipeline.prototype.after = function (existingFn, newFn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n    var pos = this._stack.indexOf(existingFn);\n\n    if (pos == -1) {\n      throw new Error('Cannot find existingFn');\n    }\n\n    pos = pos + 1;\n\n    this._stack.splice(pos, 0, newFn);\n  };\n  /**\n   * Adds a single function before a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n   * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n   */\n\n\n  lunr.Pipeline.prototype.before = function (existingFn, newFn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n    var pos = this._stack.indexOf(existingFn);\n\n    if (pos == -1) {\n      throw new Error('Cannot find existingFn');\n    }\n\n    this._stack.splice(pos, 0, newFn);\n  };\n  /**\n   * Removes a function from the pipeline.\n   *\n   * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.\n   */\n\n\n  lunr.Pipeline.prototype.remove = function (fn) {\n    var pos = this._stack.indexOf(fn);\n\n    if (pos == -1) {\n      return;\n    }\n\n    this._stack.splice(pos, 1);\n  };\n  /**\n   * Runs the current list of functions that make up the pipeline against the\n   * passed tokens.\n   *\n   * @param {Array} tokens The tokens to run through the pipeline.\n   * @returns {Array}\n   */\n\n\n  lunr.Pipeline.prototype.run = function (tokens) {\n    var stackLength = this._stack.length;\n\n    for (var i = 0; i < stackLength; i++) {\n      var fn = this._stack[i];\n      var memo = [];\n\n      for (var j = 0; j < tokens.length; j++) {\n        var result = fn(tokens[j], j, tokens);\n        if (result === null || result === void 0 || result === '') continue;\n\n        if (Array.isArray(result)) {\n          for (var k = 0; k < result.length; k++) {\n            memo.push(result[k]);\n          }\n        } else {\n          memo.push(result);\n        }\n      }\n\n      tokens = memo;\n    }\n\n    return tokens;\n  };\n  /**\n   * Convenience method for passing a string through a pipeline and getting\n   * strings out. This method takes care of wrapping the passed string in a\n   * token and mapping the resulting tokens back to strings.\n   *\n   * @param {string} str - The string to pass through the pipeline.\n   * @param {?object} metadata - Optional metadata to associate with the token\n   * passed to the pipeline.\n   * @returns {string[]}\n   */\n\n\n  lunr.Pipeline.prototype.runString = function (str, metadata) {\n    var token = new lunr.Token(str, metadata);\n    return this.run([token]).map(function (t) {\n      return t.toString();\n    });\n  };\n  /**\n   * Resets the pipeline by removing any existing processors.\n   *\n   */\n\n\n  lunr.Pipeline.prototype.reset = function () {\n    this._stack = [];\n  };\n  /**\n   * Returns a representation of the pipeline ready for serialisation.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @returns {Array}\n   */\n\n\n  lunr.Pipeline.prototype.toJSON = function () {\n    return this._stack.map(function (fn) {\n      lunr.Pipeline.warnIfFunctionNotRegistered(fn);\n      return fn.label;\n    });\n  };\n  /*!\n   * lunr.Vector\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A vector is used to construct the vector space of documents and queries. These\n   * vectors support operations to determine the similarity between two documents or\n   * a document and a query.\n   *\n   * Normally no parameters are required for initializing a vector, but in the case of\n   * loading a previously dumped vector the raw elements can be provided to the constructor.\n   *\n   * For performance reasons vectors are implemented with a flat array, where an elements\n   * index is immediately followed by its value. E.g. [index, value, index, value]. This\n   * allows the underlying array to be as sparse as possible and still offer decent\n   * performance when being used for vector calculations.\n   *\n   * @constructor\n   * @param {Number[]} [elements] - The flat list of element index and element value pairs.\n   */\n\n\n  lunr.Vector = function (elements) {\n    this._magnitude = 0;\n    this.elements = elements || [];\n  };\n  /**\n   * Calculates the position within the vector to insert a given index.\n   *\n   * This is used internally by insert and upsert. If there are duplicate indexes then\n   * the position is returned as if the value for that index were to be updated, but it\n   * is the callers responsibility to check whether there is a duplicate at that index\n   *\n   * @param {Number} insertIdx - The index at which the element should be inserted.\n   * @returns {Number}\n   */\n\n\n  lunr.Vector.prototype.positionForIndex = function (index) {\n    // For an empty vector the tuple can be inserted at the beginning\n    if (this.elements.length == 0) {\n      return 0;\n    }\n\n    var start = 0,\n        end = this.elements.length / 2,\n        sliceLength = end - start,\n        pivotPoint = Math.floor(sliceLength / 2),\n        pivotIndex = this.elements[pivotPoint * 2];\n\n    while (sliceLength > 1) {\n      if (pivotIndex < index) {\n        start = pivotPoint;\n      }\n\n      if (pivotIndex > index) {\n        end = pivotPoint;\n      }\n\n      if (pivotIndex == index) {\n        break;\n      }\n\n      sliceLength = end - start;\n      pivotPoint = start + Math.floor(sliceLength / 2);\n      pivotIndex = this.elements[pivotPoint * 2];\n    }\n\n    if (pivotIndex == index) {\n      return pivotPoint * 2;\n    }\n\n    if (pivotIndex > index) {\n      return pivotPoint * 2;\n    }\n\n    if (pivotIndex < index) {\n      return (pivotPoint + 1) * 2;\n    }\n  };\n  /**\n   * Inserts an element at an index within the vector.\n   *\n   * Does not allow duplicates, will throw an error if there is already an entry\n   * for this index.\n   *\n   * @param {Number} insertIdx - The index at which the element should be inserted.\n   * @param {Number} val - The value to be inserted into the vector.\n   */\n\n\n  lunr.Vector.prototype.insert = function (insertIdx, val) {\n    this.upsert(insertIdx, val, function () {\n      throw \"duplicate index\";\n    });\n  };\n  /**\n   * Inserts or updates an existing index within the vector.\n   *\n   * @param {Number} insertIdx - The index at which the element should be inserted.\n   * @param {Number} val - The value to be inserted into the vector.\n   * @param {function} fn - A function that is called for updates, the existing value and the\n   * requested value are passed as arguments\n   */\n\n\n  lunr.Vector.prototype.upsert = function (insertIdx, val, fn) {\n    this._magnitude = 0;\n    var position = this.positionForIndex(insertIdx);\n\n    if (this.elements[position] == insertIdx) {\n      this.elements[position + 1] = fn(this.elements[position + 1], val);\n    } else {\n      this.elements.splice(position, 0, insertIdx, val);\n    }\n  };\n  /**\n   * Calculates the magnitude of this vector.\n   *\n   * @returns {Number}\n   */\n\n\n  lunr.Vector.prototype.magnitude = function () {\n    if (this._magnitude) return this._magnitude;\n    var sumOfSquares = 0,\n        elementsLength = this.elements.length;\n\n    for (var i = 1; i < elementsLength; i += 2) {\n      var val = this.elements[i];\n      sumOfSquares += val * val;\n    }\n\n    return this._magnitude = Math.sqrt(sumOfSquares);\n  };\n  /**\n   * Calculates the dot product of this vector and another vector.\n   *\n   * @param {lunr.Vector} otherVector - The vector to compute the dot product with.\n   * @returns {Number}\n   */\n\n\n  lunr.Vector.prototype.dot = function (otherVector) {\n    var dotProduct = 0,\n        a = this.elements,\n        b = otherVector.elements,\n        aLen = a.length,\n        bLen = b.length,\n        aVal = 0,\n        bVal = 0,\n        i = 0,\n        j = 0;\n\n    while (i < aLen && j < bLen) {\n      aVal = a[i], bVal = b[j];\n\n      if (aVal < bVal) {\n        i += 2;\n      } else if (aVal > bVal) {\n        j += 2;\n      } else if (aVal == bVal) {\n        dotProduct += a[i + 1] * b[j + 1];\n        i += 2;\n        j += 2;\n      }\n    }\n\n    return dotProduct;\n  };\n  /**\n   * Calculates the similarity between this vector and another vector.\n   *\n   * @param {lunr.Vector} otherVector - The other vector to calculate the\n   * similarity with.\n   * @returns {Number}\n   */\n\n\n  lunr.Vector.prototype.similarity = function (otherVector) {\n    return this.dot(otherVector) / this.magnitude() || 0;\n  };\n  /**\n   * Converts the vector to an array of the elements within the vector.\n   *\n   * @returns {Number[]}\n   */\n\n\n  lunr.Vector.prototype.toArray = function () {\n    var output = new Array(this.elements.length / 2);\n\n    for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {\n      output[j] = this.elements[i];\n    }\n\n    return output;\n  };\n  /**\n   * A JSON serializable representation of the vector.\n   *\n   * @returns {Number[]}\n   */\n\n\n  lunr.Vector.prototype.toJSON = function () {\n    return this.elements;\n  };\n  /* eslint-disable */\n\n  /*!\n   * lunr.stemmer\n   * Copyright (C) 2020 Oliver Nightingale\n   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n   */\n\n  /**\n   * lunr.stemmer is an english language stemmer, this is a JavaScript\n   * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n   *\n   * @static\n   * @implements {lunr.PipelineFunction}\n   * @param {lunr.Token} token - The string to stem\n   * @returns {lunr.Token}\n   * @see {@link lunr.Pipeline}\n   * @function\n   */\n\n\n  lunr.stemmer = function () {\n    var step2list = {\n      \"ational\": \"ate\",\n      \"tional\": \"tion\",\n      \"enci\": \"ence\",\n      \"anci\": \"ance\",\n      \"izer\": \"ize\",\n      \"bli\": \"ble\",\n      \"alli\": \"al\",\n      \"entli\": \"ent\",\n      \"eli\": \"e\",\n      \"ousli\": \"ous\",\n      \"ization\": \"ize\",\n      \"ation\": \"ate\",\n      \"ator\": \"ate\",\n      \"alism\": \"al\",\n      \"iveness\": \"ive\",\n      \"fulness\": \"ful\",\n      \"ousness\": \"ous\",\n      \"aliti\": \"al\",\n      \"iviti\": \"ive\",\n      \"biliti\": \"ble\",\n      \"logi\": \"log\"\n    },\n        step3list = {\n      \"icate\": \"ic\",\n      \"ative\": \"\",\n      \"alize\": \"al\",\n      \"iciti\": \"ic\",\n      \"ical\": \"ic\",\n      \"ful\": \"\",\n      \"ness\": \"\"\n    },\n        c = \"[^aeiou]\",\n        // consonant\n    v = \"[aeiouy]\",\n        // vowel\n    C = c + \"[^aeiouy]*\",\n        // consonant sequence\n    V = v + \"[aeiou]*\",\n        // vowel sequence\n    mgr0 = \"^(\" + C + \")?\" + V + C,\n        // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",\n        // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,\n        // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v; // vowel in stem\n\n    var re_mgr0 = new RegExp(mgr0);\n    var re_mgr1 = new RegExp(mgr1);\n    var re_meq1 = new RegExp(meq1);\n    var re_s_v = new RegExp(s_v);\n    var re_1a = /^(.+?)(ss|i)es$/;\n    var re2_1a = /^(.+?)([^s])s$/;\n    var re_1b = /^(.+?)eed$/;\n    var re2_1b = /^(.+?)(ed|ing)$/;\n    var re_1b_2 = /.$/;\n    var re2_1b_2 = /(at|bl|iz)$/;\n    var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n    var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n    var re_1c = /^(.+?[^aeiou])y$/;\n    var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n    var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n    var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n    var re2_4 = /^(.+?)(s|t)(ion)$/;\n    var re_5 = /^(.+?)e$/;\n    var re_5_1 = /ll$/;\n    var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n    var porterStemmer = function porterStemmer(w) {\n      var stem, suffix, firstch, re, re2, re3, re4;\n\n      if (w.length < 3) {\n        return w;\n      }\n\n      firstch = w.substr(0, 1);\n\n      if (firstch == \"y\") {\n        w = firstch.toUpperCase() + w.substr(1);\n      } // Step 1a\n\n\n      re = re_1a;\n      re2 = re2_1a;\n\n      if (re.test(w)) {\n        w = w.replace(re, \"$1$2\");\n      } else if (re2.test(w)) {\n        w = w.replace(re2, \"$1$2\");\n      } // Step 1b\n\n\n      re = re_1b;\n      re2 = re2_1b;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        re = re_mgr0;\n\n        if (re.test(fp[1])) {\n          re = re_1b_2;\n          w = w.replace(re, \"\");\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1];\n        re2 = re_s_v;\n\n        if (re2.test(stem)) {\n          w = stem;\n          re2 = re2_1b_2;\n          re3 = re3_1b_2;\n          re4 = re4_1b_2;\n\n          if (re2.test(w)) {\n            w = w + \"e\";\n          } else if (re3.test(w)) {\n            re = re_1b_2;\n            w = w.replace(re, \"\");\n          } else if (re4.test(w)) {\n            w = w + \"e\";\n          }\n        }\n      } // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n\n\n      re = re_1c;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        w = stem + \"i\";\n      } // Step 2\n\n\n      re = re_2;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n\n        if (re.test(stem)) {\n          w = stem + step2list[suffix];\n        }\n      } // Step 3\n\n\n      re = re_3;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n\n        if (re.test(stem)) {\n          w = stem + step3list[suffix];\n        }\n      } // Step 4\n\n\n      re = re_4;\n      re2 = re2_4;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n\n        if (re.test(stem)) {\n          w = stem;\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1] + fp[2];\n        re2 = re_mgr1;\n\n        if (re2.test(stem)) {\n          w = stem;\n        }\n      } // Step 5\n\n\n      re = re_5;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n        re2 = re_meq1;\n        re3 = re3_5;\n\n        if (re.test(stem) || re2.test(stem) && !re3.test(stem)) {\n          w = stem;\n        }\n      }\n\n      re = re_5_1;\n      re2 = re_mgr1;\n\n      if (re.test(w) && re2.test(w)) {\n        re = re_1b_2;\n        w = w.replace(re, \"\");\n      } // and turn initial Y back to y\n\n\n      if (firstch == \"y\") {\n        w = firstch.toLowerCase() + w.substr(1);\n      }\n\n      return w;\n    };\n\n    return function (token) {\n      return token.update(porterStemmer);\n    };\n  }();\n\n  lunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer');\n  /*!\n   * lunr.stopWordFilter\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * lunr.generateStopWordFilter builds a stopWordFilter function from the provided\n   * list of stop words.\n   *\n   * The built in lunr.stopWordFilter is built using this generator and can be used\n   * to generate custom stopWordFilters for applications or non English languages.\n   *\n   * @function\n   * @param {Array} token The token to pass through the filter\n   * @returns {lunr.PipelineFunction}\n   * @see lunr.Pipeline\n   * @see lunr.stopWordFilter\n   */\n\n  lunr.generateStopWordFilter = function (stopWords) {\n    var words = stopWords.reduce(function (memo, stopWord) {\n      memo[stopWord] = stopWord;\n      return memo;\n    }, {});\n    return function (token) {\n      if (token && words[token.toString()] !== token.toString()) return token;\n    };\n  };\n  /**\n   * lunr.stopWordFilter is an English language stop word list filter, any words\n   * contained in the list will not be passed through the filter.\n   *\n   * This is intended to be used in the Pipeline. If the token does not pass the\n   * filter then undefined will be returned.\n   *\n   * @function\n   * @implements {lunr.PipelineFunction}\n   * @params {lunr.Token} token - A token to check for being a stop word.\n   * @returns {lunr.Token}\n   * @see {@link lunr.Pipeline}\n   */\n\n\n  lunr.stopWordFilter = lunr.generateStopWordFilter(['a', 'able', 'about', 'across', 'after', 'all', 'almost', 'also', 'am', 'among', 'an', 'and', 'any', 'are', 'as', 'at', 'be', 'because', 'been', 'but', 'by', 'can', 'cannot', 'could', 'dear', 'did', 'do', 'does', 'either', 'else', 'ever', 'every', 'for', 'from', 'get', 'got', 'had', 'has', 'have', 'he', 'her', 'hers', 'him', 'his', 'how', 'however', 'i', 'if', 'in', 'into', 'is', 'it', 'its', 'just', 'least', 'let', 'like', 'likely', 'may', 'me', 'might', 'most', 'must', 'my', 'neither', 'no', 'nor', 'not', 'of', 'off', 'often', 'on', 'only', 'or', 'other', 'our', 'own', 'rather', 'said', 'say', 'says', 'she', 'should', 'since', 'so', 'some', 'than', 'that', 'the', 'their', 'them', 'then', 'there', 'these', 'they', 'this', 'tis', 'to', 'too', 'twas', 'us', 'wants', 'was', 'we', 'were', 'what', 'when', 'where', 'which', 'while', 'who', 'whom', 'why', 'will', 'with', 'would', 'yet', 'you', 'your']);\n  lunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter');\n  /*!\n   * lunr.trimmer\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * lunr.trimmer is a pipeline function for trimming non word\n   * characters from the beginning and end of tokens before they\n   * enter the index.\n   *\n   * This implementation may not work correctly for non latin\n   * characters and should either be removed or adapted for use\n   * with languages with non-latin characters.\n   *\n   * @static\n   * @implements {lunr.PipelineFunction}\n   * @param {lunr.Token} token The token to pass through the filter\n   * @returns {lunr.Token}\n   * @see lunr.Pipeline\n   */\n\n  lunr.trimmer = function (token) {\n    return token.update(function (s) {\n      return s.replace(/^\\W+/, '').replace(/\\W+$/, '');\n    });\n  };\n\n  lunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer');\n  /*!\n   * lunr.TokenSet\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A token set is used to store the unique list of all tokens\n   * within an index. Token sets are also used to represent an\n   * incoming query to the index, this query token set and index\n   * token set are then intersected to find which tokens to look\n   * up in the inverted index.\n   *\n   * A token set can hold multiple tokens, as in the case of the\n   * index token set, or it can hold a single token as in the\n   * case of a simple query token set.\n   *\n   * Additionally token sets are used to perform wildcard matching.\n   * Leading, contained and trailing wildcards are supported, and\n   * from this edit distance matching can also be provided.\n   *\n   * Token sets are implemented as a minimal finite state automata,\n   * where both common prefixes and suffixes are shared between tokens.\n   * This helps to reduce the space used for storing the token set.\n   *\n   * @constructor\n   */\n\n  lunr.TokenSet = function () {\n    this.final = false;\n    this.edges = {};\n    this.id = lunr.TokenSet._nextId;\n    lunr.TokenSet._nextId += 1;\n  };\n  /**\n   * Keeps track of the next, auto increment, identifier to assign\n   * to a new tokenSet.\n   *\n   * TokenSets require a unique identifier to be correctly minimised.\n   *\n   * @private\n   */\n\n\n  lunr.TokenSet._nextId = 1;\n  /**\n   * Creates a TokenSet instance from the given sorted array of words.\n   *\n   * @param {String[]} arr - A sorted array of strings to create the set from.\n   * @returns {lunr.TokenSet}\n   * @throws Will throw an error if the input array is not sorted.\n   */\n\n  lunr.TokenSet.fromArray = function (arr) {\n    var builder = new lunr.TokenSet.Builder();\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      builder.insert(arr[i]);\n    }\n\n    builder.finish();\n    return builder.root;\n  };\n  /**\n   * Creates a token set from a query clause.\n   *\n   * @private\n   * @param {Object} clause - A single clause from lunr.Query.\n   * @param {string} clause.term - The query clause term.\n   * @param {number} [clause.editDistance] - The optional edit distance for the term.\n   * @returns {lunr.TokenSet}\n   */\n\n\n  lunr.TokenSet.fromClause = function (clause) {\n    if ('editDistance' in clause) {\n      return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance);\n    } else {\n      return lunr.TokenSet.fromString(clause.term);\n    }\n  };\n  /**\n   * Creates a token set representing a single string with a specified\n   * edit distance.\n   *\n   * Insertions, deletions, substitutions and transpositions are each\n   * treated as an edit distance of 1.\n   *\n   * Increasing the allowed edit distance will have a dramatic impact\n   * on the performance of both creating and intersecting these TokenSets.\n   * It is advised to keep the edit distance less than 3.\n   *\n   * @param {string} str - The string to create the token set from.\n   * @param {number} editDistance - The allowed edit distance to match.\n   * @returns {lunr.Vector}\n   */\n\n\n  lunr.TokenSet.fromFuzzyString = function (str, editDistance) {\n    var root = new lunr.TokenSet();\n    var stack = [{\n      node: root,\n      editsRemaining: editDistance,\n      str: str\n    }];\n\n    while (stack.length) {\n      var frame = stack.pop(); // no edit\n\n      if (frame.str.length > 0) {\n        var char = frame.str.charAt(0),\n            noEditNode;\n\n        if (char in frame.node.edges) {\n          noEditNode = frame.node.edges[char];\n        } else {\n          noEditNode = new lunr.TokenSet();\n          frame.node.edges[char] = noEditNode;\n        }\n\n        if (frame.str.length == 1) {\n          noEditNode.final = true;\n        }\n\n        stack.push({\n          node: noEditNode,\n          editsRemaining: frame.editsRemaining,\n          str: frame.str.slice(1)\n        });\n      }\n\n      if (frame.editsRemaining == 0) {\n        continue;\n      } // insertion\n\n\n      if (\"*\" in frame.node.edges) {\n        var insertionNode = frame.node.edges[\"*\"];\n      } else {\n        var insertionNode = new lunr.TokenSet();\n        frame.node.edges[\"*\"] = insertionNode;\n      }\n\n      if (frame.str.length == 0) {\n        insertionNode.final = true;\n      }\n\n      stack.push({\n        node: insertionNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str\n      }); // deletion\n      // can only do a deletion if we have enough edits remaining\n      // and if there are characters left to delete in the string\n\n      if (frame.str.length > 1) {\n        stack.push({\n          node: frame.node,\n          editsRemaining: frame.editsRemaining - 1,\n          str: frame.str.slice(1)\n        });\n      } // deletion\n      // just removing the last character from the str\n\n\n      if (frame.str.length == 1) {\n        frame.node.final = true;\n      } // substitution\n      // can only do a substitution if we have enough edits remaining\n      // and if there are characters left to substitute\n\n\n      if (frame.str.length >= 1) {\n        if (\"*\" in frame.node.edges) {\n          var substitutionNode = frame.node.edges[\"*\"];\n        } else {\n          var substitutionNode = new lunr.TokenSet();\n          frame.node.edges[\"*\"] = substitutionNode;\n        }\n\n        if (frame.str.length == 1) {\n          substitutionNode.final = true;\n        }\n\n        stack.push({\n          node: substitutionNode,\n          editsRemaining: frame.editsRemaining - 1,\n          str: frame.str.slice(1)\n        });\n      } // transposition\n      // can only do a transposition if there are edits remaining\n      // and there are enough characters to transpose\n\n\n      if (frame.str.length > 1) {\n        var charA = frame.str.charAt(0),\n            charB = frame.str.charAt(1),\n            transposeNode;\n\n        if (charB in frame.node.edges) {\n          transposeNode = frame.node.edges[charB];\n        } else {\n          transposeNode = new lunr.TokenSet();\n          frame.node.edges[charB] = transposeNode;\n        }\n\n        if (frame.str.length == 1) {\n          transposeNode.final = true;\n        }\n\n        stack.push({\n          node: transposeNode,\n          editsRemaining: frame.editsRemaining - 1,\n          str: charA + frame.str.slice(2)\n        });\n      }\n    }\n\n    return root;\n  };\n  /**\n   * Creates a TokenSet from a string.\n   *\n   * The string may contain one or more wildcard characters (*)\n   * that will allow wildcard matching when intersecting with\n   * another TokenSet.\n   *\n   * @param {string} str - The string to create a TokenSet from.\n   * @returns {lunr.TokenSet}\n   */\n\n\n  lunr.TokenSet.fromString = function (str) {\n    var node = new lunr.TokenSet(),\n        root = node;\n    /*\n     * Iterates through all characters within the passed string\n     * appending a node for each character.\n     *\n     * When a wildcard character is found then a self\n     * referencing edge is introduced to continually match\n     * any number of any characters.\n     */\n\n    for (var i = 0, len = str.length; i < len; i++) {\n      var char = str[i],\n          final = i == len - 1;\n\n      if (char == \"*\") {\n        node.edges[char] = node;\n        node.final = final;\n      } else {\n        var next = new lunr.TokenSet();\n        next.final = final;\n        node.edges[char] = next;\n        node = next;\n      }\n    }\n\n    return root;\n  };\n  /**\n   * Converts this TokenSet into an array of strings\n   * contained within the TokenSet.\n   *\n   * This is not intended to be used on a TokenSet that\n   * contains wildcards, in these cases the results are\n   * undefined and are likely to cause an infinite loop.\n   *\n   * @returns {string[]}\n   */\n\n\n  lunr.TokenSet.prototype.toArray = function () {\n    var words = [];\n    var stack = [{\n      prefix: \"\",\n      node: this\n    }];\n\n    while (stack.length) {\n      var frame = stack.pop(),\n          edges = Object.keys(frame.node.edges),\n          len = edges.length;\n\n      if (frame.node.final) {\n        /* In Safari, at this point the prefix is sometimes corrupted, see:\n         * https://github.com/olivernn/lunr.js/issues/279 Calling any\n         * String.prototype method forces Safari to \"cast\" this string to what\n         * it's supposed to be, fixing the bug. */\n        frame.prefix.charAt(0);\n        words.push(frame.prefix);\n      }\n\n      for (var i = 0; i < len; i++) {\n        var edge = edges[i];\n        stack.push({\n          prefix: frame.prefix.concat(edge),\n          node: frame.node.edges[edge]\n        });\n      }\n    }\n\n    return words;\n  };\n  /**\n   * Generates a string representation of a TokenSet.\n   *\n   * This is intended to allow TokenSets to be used as keys\n   * in objects, largely to aid the construction and minimisation\n   * of a TokenSet. As such it is not designed to be a human\n   * friendly representation of the TokenSet.\n   *\n   * @returns {string}\n   */\n\n\n  lunr.TokenSet.prototype.toString = function () {\n    // NOTE: Using Object.keys here as this.edges is very likely\n    // to enter 'hash-mode' with many keys being added\n    //\n    // avoiding a for-in loop here as it leads to the function\n    // being de-optimised (at least in V8). From some simple\n    // benchmarks the performance is comparable, but allowing\n    // V8 to optimize may mean easy performance wins in the future.\n    if (this._str) {\n      return this._str;\n    }\n\n    var str = this.final ? '1' : '0',\n        labels = Object.keys(this.edges).sort(),\n        len = labels.length;\n\n    for (var i = 0; i < len; i++) {\n      var label = labels[i],\n          node = this.edges[label];\n      str = str + label + node.id;\n    }\n\n    return str;\n  };\n  /**\n   * Returns a new TokenSet that is the intersection of\n   * this TokenSet and the passed TokenSet.\n   *\n   * This intersection will take into account any wildcards\n   * contained within the TokenSet.\n   *\n   * @param {lunr.TokenSet} b - An other TokenSet to intersect with.\n   * @returns {lunr.TokenSet}\n   */\n\n\n  lunr.TokenSet.prototype.intersect = function (b) {\n    var output = new lunr.TokenSet(),\n        frame = undefined;\n    var stack = [{\n      qNode: b,\n      output: output,\n      node: this\n    }];\n\n    while (stack.length) {\n      frame = stack.pop(); // NOTE: As with the #toString method, we are using\n      // Object.keys and a for loop instead of a for-in loop\n      // as both of these objects enter 'hash' mode, causing\n      // the function to be de-optimised in V8\n\n      var qEdges = Object.keys(frame.qNode.edges),\n          qLen = qEdges.length,\n          nEdges = Object.keys(frame.node.edges),\n          nLen = nEdges.length;\n\n      for (var q = 0; q < qLen; q++) {\n        var qEdge = qEdges[q];\n\n        for (var n = 0; n < nLen; n++) {\n          var nEdge = nEdges[n];\n\n          if (nEdge == qEdge || qEdge == '*') {\n            var node = frame.node.edges[nEdge],\n                qNode = frame.qNode.edges[qEdge],\n                final = node.final && qNode.final,\n                next = undefined;\n\n            if (nEdge in frame.output.edges) {\n              // an edge already exists for this character\n              // no need to create a new node, just set the finality\n              // bit unless this node is already final\n              next = frame.output.edges[nEdge];\n              next.final = next.final || final;\n            } else {\n              // no edge exists yet, must create one\n              // set the finality bit and insert it\n              // into the output\n              next = new lunr.TokenSet();\n              next.final = final;\n              frame.output.edges[nEdge] = next;\n            }\n\n            stack.push({\n              qNode: qNode,\n              output: next,\n              node: node\n            });\n          }\n        }\n      }\n    }\n\n    return output;\n  };\n\n  lunr.TokenSet.Builder = function () {\n    this.previousWord = \"\";\n    this.root = new lunr.TokenSet();\n    this.uncheckedNodes = [];\n    this.minimizedNodes = {};\n  };\n\n  lunr.TokenSet.Builder.prototype.insert = function (word) {\n    var node,\n        commonPrefix = 0;\n\n    if (word < this.previousWord) {\n      throw new Error(\"Out of order word insertion\");\n    }\n\n    for (var i = 0; i < word.length && i < this.previousWord.length; i++) {\n      if (word[i] != this.previousWord[i]) break;\n      commonPrefix++;\n    }\n\n    this.minimize(commonPrefix);\n\n    if (this.uncheckedNodes.length == 0) {\n      node = this.root;\n    } else {\n      node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child;\n    }\n\n    for (var i = commonPrefix; i < word.length; i++) {\n      var nextNode = new lunr.TokenSet(),\n          char = word[i];\n      node.edges[char] = nextNode;\n      this.uncheckedNodes.push({\n        parent: node,\n        char: char,\n        child: nextNode\n      });\n      node = nextNode;\n    }\n\n    node.final = true;\n    this.previousWord = word;\n  };\n\n  lunr.TokenSet.Builder.prototype.finish = function () {\n    this.minimize(0);\n  };\n\n  lunr.TokenSet.Builder.prototype.minimize = function (downTo) {\n    for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {\n      var node = this.uncheckedNodes[i],\n          childKey = node.child.toString();\n\n      if (childKey in this.minimizedNodes) {\n        node.parent.edges[node.char] = this.minimizedNodes[childKey];\n      } else {\n        // Cache the key for this node since\n        // we know it can't change anymore\n        node.child._str = childKey;\n        this.minimizedNodes[childKey] = node.child;\n      }\n\n      this.uncheckedNodes.pop();\n    }\n  };\n  /*!\n   * lunr.Index\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * An index contains the built index of all documents and provides a query interface\n   * to the index.\n   *\n   * Usually instances of lunr.Index will not be created using this constructor, instead\n   * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be\n   * used to load previously built and serialized indexes.\n   *\n   * @constructor\n   * @param {Object} attrs - The attributes of the built search index.\n   * @param {Object} attrs.invertedIndex - An index of term/field to document reference.\n   * @param {Object<string, lunr.Vector>} attrs.fieldVectors - Field vectors\n   * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.\n   * @param {string[]} attrs.fields - The names of indexed document fields.\n   * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.\n   */\n\n\n  lunr.Index = function (attrs) {\n    this.invertedIndex = attrs.invertedIndex;\n    this.fieldVectors = attrs.fieldVectors;\n    this.tokenSet = attrs.tokenSet;\n    this.fields = attrs.fields;\n    this.pipeline = attrs.pipeline;\n  };\n  /**\n   * A result contains details of a document matching a search query.\n   * @typedef {Object} lunr.Index~Result\n   * @property {string} ref - The reference of the document this result represents.\n   * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.\n   * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.\n   */\n\n  /**\n   * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple\n   * query language which itself is parsed into an instance of lunr.Query.\n   *\n   * For programmatically building queries it is advised to directly use lunr.Query, the query language\n   * is best used for human entered text rather than program generated text.\n   *\n   * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported\n   * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'\n   * or 'world', though those that contain both will rank higher in the results.\n   *\n   * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can\n   * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding\n   * wildcards will increase the number of documents that will be found but can also have a negative\n   * impact on query performance, especially with wildcards at the beginning of a term.\n   *\n   * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term\n   * hello in the title field will match this query. Using a field not present in the index will lead\n   * to an error being thrown.\n   *\n   * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term\n   * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported\n   * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.\n   * Avoid large values for edit distance to improve query performance.\n   *\n   * Each term also supports a presence modifier. By default a term's presence in document is optional, however\n   * this can be changed to either required or prohibited. For a term's presence to be required in a document the\n   * term should be prefixed with a '+', e.g. `+foo bar` is a search for documents that must contain 'foo' and\n   * optionally contain 'bar'. Conversely a leading '-' sets the terms presence to prohibited, i.e. it must not\n   * appear in a document, e.g. `-foo bar` is a search for documents that do not contain 'foo' but may contain 'bar'.\n   *\n   * To escape special characters the backslash character '\\' can be used, this allows searches to include\n   * characters that would normally be considered modifiers, e.g. `foo\\~2` will search for a term \"foo~2\" instead\n   * of attempting to apply a boost of 2 to the search term \"foo\".\n   *\n   * @typedef {string} lunr.Index~QueryString\n   * @example <caption>Simple single term query</caption>\n   * hello\n   * @example <caption>Multiple term query</caption>\n   * hello world\n   * @example <caption>term scoped to a field</caption>\n   * title:hello\n   * @example <caption>term with a boost of 10</caption>\n   * hello^10\n   * @example <caption>term with an edit distance of 2</caption>\n   * hello~2\n   * @example <caption>terms with presence modifiers</caption>\n   * -foo +bar baz\n   */\n\n  /**\n   * Performs a search against the index using lunr query syntax.\n   *\n   * Results will be returned sorted by their score, the most relevant results\n   * will be returned first.  For details on how the score is calculated, please see\n   * the {@link https://lunrjs.com/guides/searching.html#scoring|guide}.\n   *\n   * For more programmatic querying use lunr.Index#query.\n   *\n   * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.\n   * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.\n   * @returns {lunr.Index~Result[]}\n   */\n\n\n  lunr.Index.prototype.search = function (queryString) {\n    return this.query(function (query) {\n      var parser = new lunr.QueryParser(queryString, query);\n      parser.parse();\n    });\n  };\n  /**\n   * A query builder callback provides a query object to be used to express\n   * the query to perform on the index.\n   *\n   * @callback lunr.Index~queryBuilder\n   * @param {lunr.Query} query - The query object to build up.\n   * @this lunr.Query\n   */\n\n  /**\n   * Performs a query against the index using the yielded lunr.Query object.\n   *\n   * If performing programmatic queries against the index, this method is preferred\n   * over lunr.Index#search so as to avoid the additional query parsing overhead.\n   *\n   * A query object is yielded to the supplied function which should be used to\n   * express the query to be run against the index.\n   *\n   * Note that although this function takes a callback parameter it is _not_ an\n   * asynchronous operation, the callback is just yielded a query object to be\n   * customized.\n   *\n   * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.\n   * @returns {lunr.Index~Result[]}\n   */\n\n\n  lunr.Index.prototype.query = function (fn) {\n    // for each query clause\n    // * process terms\n    // * expand terms from token set\n    // * find matching documents and metadata\n    // * get document vectors\n    // * score documents\n    var query = new lunr.Query(this.fields),\n        matchingFields = Object.create(null),\n        queryVectors = Object.create(null),\n        termFieldCache = Object.create(null),\n        requiredMatches = Object.create(null),\n        prohibitedMatches = Object.create(null);\n    /*\n     * To support field level boosts a query vector is created per\n     * field. An empty vector is eagerly created to support negated\n     * queries.\n     */\n\n    for (var i = 0; i < this.fields.length; i++) {\n      queryVectors[this.fields[i]] = new lunr.Vector();\n    }\n\n    fn.call(query, query);\n\n    for (var i = 0; i < query.clauses.length; i++) {\n      /*\n       * Unless the pipeline has been disabled for this term, which is\n       * the case for terms with wildcards, we need to pass the clause\n       * term through the search pipeline. A pipeline returns an array\n       * of processed terms. Pipeline functions may expand the passed\n       * term, which means we may end up performing multiple index lookups\n       * for a single query term.\n       */\n      var clause = query.clauses[i],\n          terms = null,\n          clauseMatches = lunr.Set.empty;\n\n      if (clause.usePipeline) {\n        terms = this.pipeline.runString(clause.term, {\n          fields: clause.fields\n        });\n      } else {\n        terms = [clause.term];\n      }\n\n      for (var m = 0; m < terms.length; m++) {\n        var term = terms[m];\n        /*\n         * Each term returned from the pipeline needs to use the same query\n         * clause object, e.g. the same boost and or edit distance. The\n         * simplest way to do this is to re-use the clause object but mutate\n         * its term property.\n         */\n\n        clause.term = term;\n        /*\n         * From the term in the clause we create a token set which will then\n         * be used to intersect the indexes token set to get a list of terms\n         * to lookup in the inverted index\n         */\n\n        var termTokenSet = lunr.TokenSet.fromClause(clause),\n            expandedTerms = this.tokenSet.intersect(termTokenSet).toArray();\n        /*\n         * If a term marked as required does not exist in the tokenSet it is\n         * impossible for the search to return any matches. We set all the field\n         * scoped required matches set to empty and stop examining any further\n         * clauses.\n         */\n\n        if (expandedTerms.length === 0 && clause.presence === lunr.Query.presence.REQUIRED) {\n          for (var k = 0; k < clause.fields.length; k++) {\n            var field = clause.fields[k];\n            requiredMatches[field] = lunr.Set.empty;\n          }\n\n          break;\n        }\n\n        for (var j = 0; j < expandedTerms.length; j++) {\n          /*\n           * For each term get the posting and termIndex, this is required for\n           * building the query vector.\n           */\n          var expandedTerm = expandedTerms[j],\n              posting = this.invertedIndex[expandedTerm],\n              termIndex = posting._index;\n\n          for (var k = 0; k < clause.fields.length; k++) {\n            /*\n             * For each field that this query term is scoped by (by default\n             * all fields are in scope) we need to get all the document refs\n             * that have this term in that field.\n             *\n             * The posting is the entry in the invertedIndex for the matching\n             * term from above.\n             */\n            var field = clause.fields[k],\n                fieldPosting = posting[field],\n                matchingDocumentRefs = Object.keys(fieldPosting),\n                termField = expandedTerm + \"/\" + field,\n                matchingDocumentsSet = new lunr.Set(matchingDocumentRefs);\n            /*\n             * if the presence of this term is required ensure that the matching\n             * documents are added to the set of required matches for this clause.\n             *\n             */\n\n            if (clause.presence == lunr.Query.presence.REQUIRED) {\n              clauseMatches = clauseMatches.union(matchingDocumentsSet);\n\n              if (requiredMatches[field] === undefined) {\n                requiredMatches[field] = lunr.Set.complete;\n              }\n            }\n            /*\n             * if the presence of this term is prohibited ensure that the matching\n             * documents are added to the set of prohibited matches for this field,\n             * creating that set if it does not yet exist.\n             */\n\n\n            if (clause.presence == lunr.Query.presence.PROHIBITED) {\n              if (prohibitedMatches[field] === undefined) {\n                prohibitedMatches[field] = lunr.Set.empty;\n              }\n\n              prohibitedMatches[field] = prohibitedMatches[field].union(matchingDocumentsSet);\n              /*\n               * Prohibited matches should not be part of the query vector used for\n               * similarity scoring and no metadata should be extracted so we continue\n               * to the next field\n               */\n\n              continue;\n            }\n            /*\n             * The query field vector is populated using the termIndex found for\n             * the term and a unit value with the appropriate boost applied.\n             * Using upsert because there could already be an entry in the vector\n             * for the term we are working with. In that case we just add the scores\n             * together.\n             */\n\n\n            queryVectors[field].upsert(termIndex, clause.boost, function (a, b) {\n              return a + b;\n            });\n            /**\n             * If we've already seen this term, field combo then we've already collected\n             * the matching documents and metadata, no need to go through all that again\n             */\n\n            if (termFieldCache[termField]) {\n              continue;\n            }\n\n            for (var l = 0; l < matchingDocumentRefs.length; l++) {\n              /*\n               * All metadata for this term/field/document triple\n               * are then extracted and collected into an instance\n               * of lunr.MatchData ready to be returned in the query\n               * results\n               */\n              var matchingDocumentRef = matchingDocumentRefs[l],\n                  matchingFieldRef = new lunr.FieldRef(matchingDocumentRef, field),\n                  metadata = fieldPosting[matchingDocumentRef],\n                  fieldMatch;\n\n              if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {\n                matchingFields[matchingFieldRef] = new lunr.MatchData(expandedTerm, field, metadata);\n              } else {\n                fieldMatch.add(expandedTerm, field, metadata);\n              }\n            }\n\n            termFieldCache[termField] = true;\n          }\n        }\n      }\n      /**\n       * If the presence was required we need to update the requiredMatches field sets.\n       * We do this after all fields for the term have collected their matches because\n       * the clause terms presence is required in _any_ of the fields not _all_ of the\n       * fields.\n       */\n\n\n      if (clause.presence === lunr.Query.presence.REQUIRED) {\n        for (var k = 0; k < clause.fields.length; k++) {\n          var field = clause.fields[k];\n          requiredMatches[field] = requiredMatches[field].intersect(clauseMatches);\n        }\n      }\n    }\n    /**\n     * Need to combine the field scoped required and prohibited\n     * matching documents into a global set of required and prohibited\n     * matches\n     */\n\n\n    var allRequiredMatches = lunr.Set.complete,\n        allProhibitedMatches = lunr.Set.empty;\n\n    for (var i = 0; i < this.fields.length; i++) {\n      var field = this.fields[i];\n\n      if (requiredMatches[field]) {\n        allRequiredMatches = allRequiredMatches.intersect(requiredMatches[field]);\n      }\n\n      if (prohibitedMatches[field]) {\n        allProhibitedMatches = allProhibitedMatches.union(prohibitedMatches[field]);\n      }\n    }\n\n    var matchingFieldRefs = Object.keys(matchingFields),\n        results = [],\n        matches = Object.create(null);\n    /*\n     * If the query is negated (contains only prohibited terms)\n     * we need to get _all_ fieldRefs currently existing in the\n     * index. This is only done when we know that the query is\n     * entirely prohibited terms to avoid any cost of getting all\n     * fieldRefs unnecessarily.\n     *\n     * Additionally, blank MatchData must be created to correctly\n     * populate the results.\n     */\n\n    if (query.isNegated()) {\n      matchingFieldRefs = Object.keys(this.fieldVectors);\n\n      for (var i = 0; i < matchingFieldRefs.length; i++) {\n        var matchingFieldRef = matchingFieldRefs[i];\n        var fieldRef = lunr.FieldRef.fromString(matchingFieldRef);\n        matchingFields[matchingFieldRef] = new lunr.MatchData();\n      }\n    }\n\n    for (var i = 0; i < matchingFieldRefs.length; i++) {\n      /*\n       * Currently we have document fields that match the query, but we\n       * need to return documents. The matchData and scores are combined\n       * from multiple fields belonging to the same document.\n       *\n       * Scores are calculated by field, using the query vectors created\n       * above, and combined into a final document score using addition.\n       */\n      var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),\n          docRef = fieldRef.docRef;\n\n      if (!allRequiredMatches.contains(docRef)) {\n        continue;\n      }\n\n      if (allProhibitedMatches.contains(docRef)) {\n        continue;\n      }\n\n      var fieldVector = this.fieldVectors[fieldRef],\n          score = queryVectors[fieldRef.fieldName].similarity(fieldVector),\n          docMatch;\n\n      if ((docMatch = matches[docRef]) !== undefined) {\n        docMatch.score += score;\n        docMatch.matchData.combine(matchingFields[fieldRef]);\n      } else {\n        var match = {\n          ref: docRef,\n          score: score,\n          matchData: matchingFields[fieldRef]\n        };\n        matches[docRef] = match;\n        results.push(match);\n      }\n    }\n    /*\n     * Sort the results objects by score, highest first.\n     */\n\n\n    return results.sort(function (a, b) {\n      return b.score - a.score;\n    });\n  };\n  /**\n   * Prepares the index for JSON serialization.\n   *\n   * The schema for this JSON blob will be described in a\n   * separate JSON schema file.\n   *\n   * @returns {Object}\n   */\n\n\n  lunr.Index.prototype.toJSON = function () {\n    var invertedIndex = Object.keys(this.invertedIndex).sort().map(function (term) {\n      return [term, this.invertedIndex[term]];\n    }, this);\n    var fieldVectors = Object.keys(this.fieldVectors).map(function (ref) {\n      return [ref, this.fieldVectors[ref].toJSON()];\n    }, this);\n    return {\n      version: lunr.version,\n      fields: this.fields,\n      fieldVectors: fieldVectors,\n      invertedIndex: invertedIndex,\n      pipeline: this.pipeline.toJSON()\n    };\n  };\n  /**\n   * Loads a previously serialized lunr.Index\n   *\n   * @param {Object} serializedIndex - A previously serialized lunr.Index\n   * @returns {lunr.Index}\n   */\n\n\n  lunr.Index.load = function (serializedIndex) {\n    var attrs = {},\n        fieldVectors = {},\n        serializedVectors = serializedIndex.fieldVectors,\n        invertedIndex = Object.create(null),\n        serializedInvertedIndex = serializedIndex.invertedIndex,\n        tokenSetBuilder = new lunr.TokenSet.Builder(),\n        pipeline = lunr.Pipeline.load(serializedIndex.pipeline);\n\n    if (serializedIndex.version != lunr.version) {\n      lunr.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\" + lunr.version + \"' does not match serialized index '\" + serializedIndex.version + \"'\");\n    }\n\n    for (var i = 0; i < serializedVectors.length; i++) {\n      var tuple = serializedVectors[i],\n          ref = tuple[0],\n          elements = tuple[1];\n      fieldVectors[ref] = new lunr.Vector(elements);\n    }\n\n    for (var i = 0; i < serializedInvertedIndex.length; i++) {\n      var tuple = serializedInvertedIndex[i],\n          term = tuple[0],\n          posting = tuple[1];\n      tokenSetBuilder.insert(term);\n      invertedIndex[term] = posting;\n    }\n\n    tokenSetBuilder.finish();\n    attrs.fields = serializedIndex.fields;\n    attrs.fieldVectors = fieldVectors;\n    attrs.invertedIndex = invertedIndex;\n    attrs.tokenSet = tokenSetBuilder.root;\n    attrs.pipeline = pipeline;\n    return new lunr.Index(attrs);\n  };\n  /*!\n   * lunr.Builder\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * lunr.Builder performs indexing on a set of documents and\n   * returns instances of lunr.Index ready for querying.\n   *\n   * All configuration of the index is done via the builder, the\n   * fields to index, the document reference, the text processing\n   * pipeline and document scoring parameters are all set on the\n   * builder before indexing.\n   *\n   * @constructor\n   * @property {string} _ref - Internal reference to the document reference field.\n   * @property {string[]} _fields - Internal reference to the document fields to index.\n   * @property {object} invertedIndex - The inverted index maps terms to document fields.\n   * @property {object} documentTermFrequencies - Keeps track of document term frequencies.\n   * @property {object} documentLengths - Keeps track of the length of documents added to the index.\n   * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.\n   * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.\n   * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.\n   * @property {number} documentCount - Keeps track of the total number of documents indexed.\n   * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.\n   * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.\n   * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.\n   * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.\n   */\n\n\n  lunr.Builder = function () {\n    this._ref = \"id\";\n    this._fields = Object.create(null);\n    this._documents = Object.create(null);\n    this.invertedIndex = Object.create(null);\n    this.fieldTermFrequencies = {};\n    this.fieldLengths = {};\n    this.tokenizer = lunr.tokenizer;\n    this.pipeline = new lunr.Pipeline();\n    this.searchPipeline = new lunr.Pipeline();\n    this.documentCount = 0;\n    this._b = 0.75;\n    this._k1 = 1.2;\n    this.termIndex = 0;\n    this.metadataWhitelist = [];\n  };\n  /**\n   * Sets the document field used as the document reference. Every document must have this field.\n   * The type of this field in the document should be a string, if it is not a string it will be\n   * coerced into a string by calling toString.\n   *\n   * The default ref is 'id'.\n   *\n   * The ref should _not_ be changed during indexing, it should be set before any documents are\n   * added to the index. Changing it during indexing can lead to inconsistent results.\n   *\n   * @param {string} ref - The name of the reference field in the document.\n   */\n\n\n  lunr.Builder.prototype.ref = function (ref) {\n    this._ref = ref;\n  };\n  /**\n   * A function that is used to extract a field from a document.\n   *\n   * Lunr expects a field to be at the top level of a document, if however the field\n   * is deeply nested within a document an extractor function can be used to extract\n   * the right field for indexing.\n   *\n   * @callback fieldExtractor\n   * @param {object} doc - The document being added to the index.\n   * @returns {?(string|object|object[])} obj - The object that will be indexed for this field.\n   * @example <caption>Extracting a nested field</caption>\n   * function (doc) { return doc.nested.field }\n   */\n\n  /**\n   * Adds a field to the list of document fields that will be indexed. Every document being\n   * indexed should have this field. Null values for this field in indexed documents will\n   * not cause errors but will limit the chance of that document being retrieved by searches.\n   *\n   * All fields should be added before adding documents to the index. Adding fields after\n   * a document has been indexed will have no effect on already indexed documents.\n   *\n   * Fields can be boosted at build time. This allows terms within that field to have more\n   * importance when ranking search results. Use a field boost to specify that matches within\n   * one field are more important than other fields.\n   *\n   * @param {string} fieldName - The name of a field to index in all documents.\n   * @param {object} attributes - Optional attributes associated with this field.\n   * @param {number} [attributes.boost=1] - Boost applied to all terms within this field.\n   * @param {fieldExtractor} [attributes.extractor] - Function to extract a field from a document.\n   * @throws {RangeError} fieldName cannot contain unsupported characters '/'\n   */\n\n\n  lunr.Builder.prototype.field = function (fieldName, attributes) {\n    if (/\\//.test(fieldName)) {\n      throw new RangeError(\"Field '\" + fieldName + \"' contains illegal character '/'\");\n    }\n\n    this._fields[fieldName] = attributes || {};\n  };\n  /**\n   * A parameter to tune the amount of field length normalisation that is applied when\n   * calculating relevance scores. A value of 0 will completely disable any normalisation\n   * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b\n   * will be clamped to the range 0 - 1.\n   *\n   * @param {number} number - The value to set for this tuning parameter.\n   */\n\n\n  lunr.Builder.prototype.b = function (number) {\n    if (number < 0) {\n      this._b = 0;\n    } else if (number > 1) {\n      this._b = 1;\n    } else {\n      this._b = number;\n    }\n  };\n  /**\n   * A parameter that controls the speed at which a rise in term frequency results in term\n   * frequency saturation. The default value is 1.2. Setting this to a higher value will give\n   * slower saturation levels, a lower value will result in quicker saturation.\n   *\n   * @param {number} number - The value to set for this tuning parameter.\n   */\n\n\n  lunr.Builder.prototype.k1 = function (number) {\n    this._k1 = number;\n  };\n  /**\n   * Adds a document to the index.\n   *\n   * Before adding fields to the index the index should have been fully setup, with the document\n   * ref and all fields to index already having been specified.\n   *\n   * The document must have a field name as specified by the ref (by default this is 'id') and\n   * it should have all fields defined for indexing, though null or undefined values will not\n   * cause errors.\n   *\n   * Entire documents can be boosted at build time. Applying a boost to a document indicates that\n   * this document should rank higher in search results than other documents.\n   *\n   * @param {object} doc - The document to add to the index.\n   * @param {object} attributes - Optional attributes associated with this document.\n   * @param {number} [attributes.boost=1] - Boost applied to all terms within this document.\n   */\n\n\n  lunr.Builder.prototype.add = function (doc, attributes) {\n    var docRef = doc[this._ref],\n        fields = Object.keys(this._fields);\n    this._documents[docRef] = attributes || {};\n    this.documentCount += 1;\n\n    for (var i = 0; i < fields.length; i++) {\n      var fieldName = fields[i],\n          extractor = this._fields[fieldName].extractor,\n          field = extractor ? extractor(doc) : doc[fieldName],\n          tokens = this.tokenizer(field, {\n        fields: [fieldName]\n      }),\n          terms = this.pipeline.run(tokens),\n          fieldRef = new lunr.FieldRef(docRef, fieldName),\n          fieldTerms = Object.create(null);\n      this.fieldTermFrequencies[fieldRef] = fieldTerms;\n      this.fieldLengths[fieldRef] = 0; // store the length of this field for this document\n\n      this.fieldLengths[fieldRef] += terms.length; // calculate term frequencies for this field\n\n      for (var j = 0; j < terms.length; j++) {\n        var term = terms[j];\n\n        if (fieldTerms[term] == undefined) {\n          fieldTerms[term] = 0;\n        }\n\n        fieldTerms[term] += 1; // add to inverted index\n        // create an initial posting if one doesn't exist\n\n        if (this.invertedIndex[term] == undefined) {\n          var posting = Object.create(null);\n          posting[\"_index\"] = this.termIndex;\n          this.termIndex += 1;\n\n          for (var k = 0; k < fields.length; k++) {\n            posting[fields[k]] = Object.create(null);\n          }\n\n          this.invertedIndex[term] = posting;\n        } // add an entry for this term/fieldName/docRef to the invertedIndex\n\n\n        if (this.invertedIndex[term][fieldName][docRef] == undefined) {\n          this.invertedIndex[term][fieldName][docRef] = Object.create(null);\n        } // store all whitelisted metadata about this token in the\n        // inverted index\n\n\n        for (var l = 0; l < this.metadataWhitelist.length; l++) {\n          var metadataKey = this.metadataWhitelist[l],\n              metadata = term.metadata[metadataKey];\n\n          if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {\n            this.invertedIndex[term][fieldName][docRef][metadataKey] = [];\n          }\n\n          this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata);\n        }\n      }\n    }\n  };\n  /**\n   * Calculates the average document length for this index\n   *\n   * @private\n   */\n\n\n  lunr.Builder.prototype.calculateAverageFieldLengths = function () {\n    var fieldRefs = Object.keys(this.fieldLengths),\n        numberOfFields = fieldRefs.length,\n        accumulator = {},\n        documentsWithField = {};\n\n    for (var i = 0; i < numberOfFields; i++) {\n      var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n          field = fieldRef.fieldName;\n      documentsWithField[field] || (documentsWithField[field] = 0);\n      documentsWithField[field] += 1;\n      accumulator[field] || (accumulator[field] = 0);\n      accumulator[field] += this.fieldLengths[fieldRef];\n    }\n\n    var fields = Object.keys(this._fields);\n\n    for (var i = 0; i < fields.length; i++) {\n      var fieldName = fields[i];\n      accumulator[fieldName] = accumulator[fieldName] / documentsWithField[fieldName];\n    }\n\n    this.averageFieldLength = accumulator;\n  };\n  /**\n   * Builds a vector space model of every document using lunr.Vector\n   *\n   * @private\n   */\n\n\n  lunr.Builder.prototype.createFieldVectors = function () {\n    var fieldVectors = {},\n        fieldRefs = Object.keys(this.fieldTermFrequencies),\n        fieldRefsLength = fieldRefs.length,\n        termIdfCache = Object.create(null);\n\n    for (var i = 0; i < fieldRefsLength; i++) {\n      var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n          fieldName = fieldRef.fieldName,\n          fieldLength = this.fieldLengths[fieldRef],\n          fieldVector = new lunr.Vector(),\n          termFrequencies = this.fieldTermFrequencies[fieldRef],\n          terms = Object.keys(termFrequencies),\n          termsLength = terms.length;\n      var fieldBoost = this._fields[fieldName].boost || 1,\n          docBoost = this._documents[fieldRef.docRef].boost || 1;\n\n      for (var j = 0; j < termsLength; j++) {\n        var term = terms[j],\n            tf = termFrequencies[term],\n            termIndex = this.invertedIndex[term]._index,\n            idf,\n            score,\n            scoreWithPrecision;\n\n        if (termIdfCache[term] === undefined) {\n          idf = lunr.idf(this.invertedIndex[term], this.documentCount);\n          termIdfCache[term] = idf;\n        } else {\n          idf = termIdfCache[term];\n        }\n\n        score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[fieldName])) + tf);\n        score *= fieldBoost;\n        score *= docBoost;\n        scoreWithPrecision = Math.round(score * 1000) / 1000; // Converts 1.23456789 to 1.234.\n        // Reducing the precision so that the vectors take up less\n        // space when serialised. Doing it now so that they behave\n        // the same before and after serialisation. Also, this is\n        // the fastest approach to reducing a number's precision in\n        // JavaScript.\n\n        fieldVector.insert(termIndex, scoreWithPrecision);\n      }\n\n      fieldVectors[fieldRef] = fieldVector;\n    }\n\n    this.fieldVectors = fieldVectors;\n  };\n  /**\n   * Creates a token set of all tokens in the index using lunr.TokenSet\n   *\n   * @private\n   */\n\n\n  lunr.Builder.prototype.createTokenSet = function () {\n    this.tokenSet = lunr.TokenSet.fromArray(Object.keys(this.invertedIndex).sort());\n  };\n  /**\n   * Builds the index, creating an instance of lunr.Index.\n   *\n   * This completes the indexing process and should only be called\n   * once all documents have been added to the index.\n   *\n   * @returns {lunr.Index}\n   */\n\n\n  lunr.Builder.prototype.build = function () {\n    this.calculateAverageFieldLengths();\n    this.createFieldVectors();\n    this.createTokenSet();\n    return new lunr.Index({\n      invertedIndex: this.invertedIndex,\n      fieldVectors: this.fieldVectors,\n      tokenSet: this.tokenSet,\n      fields: Object.keys(this._fields),\n      pipeline: this.searchPipeline\n    });\n  };\n  /**\n   * Applies a plugin to the index builder.\n   *\n   * A plugin is a function that is called with the index builder as its context.\n   * Plugins can be used to customise or extend the behaviour of the index\n   * in some way. A plugin is just a function, that encapsulated the custom\n   * behaviour that should be applied when building the index.\n   *\n   * The plugin function will be called with the index builder as its argument, additional\n   * arguments can also be passed when calling use. The function will be called\n   * with the index builder as its context.\n   *\n   * @param {Function} plugin The plugin to apply.\n   */\n\n\n  lunr.Builder.prototype.use = function (fn) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    args.unshift(this);\n    fn.apply(this, args);\n  };\n  /**\n   * Contains and collects metadata about a matching document.\n   * A single instance of lunr.MatchData is returned as part of every\n   * lunr.Index~Result.\n   *\n   * @constructor\n   * @param {string} term - The term this match data is associated with\n   * @param {string} field - The field in which the term was found\n   * @param {object} metadata - The metadata recorded about this term in this field\n   * @property {object} metadata - A cloned collection of metadata associated with this document.\n   * @see {@link lunr.Index~Result}\n   */\n\n\n  lunr.MatchData = function (term, field, metadata) {\n    var clonedMetadata = Object.create(null),\n        metadataKeys = Object.keys(metadata || {}); // Cloning the metadata to prevent the original\n    // being mutated during match data combination.\n    // Metadata is kept in an array within the inverted\n    // index so cloning the data can be done with\n    // Array#slice\n\n    for (var i = 0; i < metadataKeys.length; i++) {\n      var key = metadataKeys[i];\n      clonedMetadata[key] = metadata[key].slice();\n    }\n\n    this.metadata = Object.create(null);\n\n    if (term !== undefined) {\n      this.metadata[term] = Object.create(null);\n      this.metadata[term][field] = clonedMetadata;\n    }\n  };\n  /**\n   * An instance of lunr.MatchData will be created for every term that matches a\n   * document. However only one instance is required in a lunr.Index~Result. This\n   * method combines metadata from another instance of lunr.MatchData with this\n   * objects metadata.\n   *\n   * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.\n   * @see {@link lunr.Index~Result}\n   */\n\n\n  lunr.MatchData.prototype.combine = function (otherMatchData) {\n    var terms = Object.keys(otherMatchData.metadata);\n\n    for (var i = 0; i < terms.length; i++) {\n      var term = terms[i],\n          fields = Object.keys(otherMatchData.metadata[term]);\n\n      if (this.metadata[term] == undefined) {\n        this.metadata[term] = Object.create(null);\n      }\n\n      for (var j = 0; j < fields.length; j++) {\n        var field = fields[j],\n            keys = Object.keys(otherMatchData.metadata[term][field]);\n\n        if (this.metadata[term][field] == undefined) {\n          this.metadata[term][field] = Object.create(null);\n        }\n\n        for (var k = 0; k < keys.length; k++) {\n          var key = keys[k];\n\n          if (this.metadata[term][field][key] == undefined) {\n            this.metadata[term][field][key] = otherMatchData.metadata[term][field][key];\n          } else {\n            this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key]);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Add metadata for a term/field pair to this instance of match data.\n   *\n   * @param {string} term - The term this match data is associated with\n   * @param {string} field - The field in which the term was found\n   * @param {object} metadata - The metadata recorded about this term in this field\n   */\n\n\n  lunr.MatchData.prototype.add = function (term, field, metadata) {\n    if (!(term in this.metadata)) {\n      this.metadata[term] = Object.create(null);\n      this.metadata[term][field] = metadata;\n      return;\n    }\n\n    if (!(field in this.metadata[term])) {\n      this.metadata[term][field] = metadata;\n      return;\n    }\n\n    var metadataKeys = Object.keys(metadata);\n\n    for (var i = 0; i < metadataKeys.length; i++) {\n      var key = metadataKeys[i];\n\n      if (key in this.metadata[term][field]) {\n        this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key]);\n      } else {\n        this.metadata[term][field][key] = metadata[key];\n      }\n    }\n  };\n  /**\n   * A lunr.Query provides a programmatic way of defining queries to be performed\n   * against a {@link lunr.Index}.\n   *\n   * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method\n   * so the query object is pre-initialized with the right index fields.\n   *\n   * @constructor\n   * @property {lunr.Query~Clause[]} clauses - An array of query clauses.\n   * @property {string[]} allFields - An array of all available fields in a lunr.Index.\n   */\n\n\n  lunr.Query = function (allFields) {\n    this.clauses = [];\n    this.allFields = allFields;\n  };\n  /**\n   * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.\n   *\n   * This allows wildcards to be added to the beginning and end of a term without having to manually do any string\n   * concatenation.\n   *\n   * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.\n   *\n   * @constant\n   * @default\n   * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour\n   * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists\n   * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists\n   * @see lunr.Query~Clause\n   * @see lunr.Query#clause\n   * @see lunr.Query#term\n   * @example <caption>query term with trailing wildcard</caption>\n   * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })\n   * @example <caption>query term with leading and trailing wildcard</caption>\n   * query.term('foo', {\n   *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING\n   * })\n   */\n\n\n  lunr.Query.wildcard = new String(\"*\");\n  lunr.Query.wildcard.NONE = 0;\n  lunr.Query.wildcard.LEADING = 1;\n  lunr.Query.wildcard.TRAILING = 2;\n  /**\n   * Constants for indicating what kind of presence a term must have in matching documents.\n   *\n   * @constant\n   * @enum {number}\n   * @see lunr.Query~Clause\n   * @see lunr.Query#clause\n   * @see lunr.Query#term\n   * @example <caption>query term with required presence</caption>\n   * query.term('foo', { presence: lunr.Query.presence.REQUIRED })\n   */\n\n  lunr.Query.presence = {\n    /**\n     * Term's presence in a document is optional, this is the default value.\n     */\n    OPTIONAL: 1,\n\n    /**\n     * Term's presence in a document is required, documents that do not contain\n     * this term will not be returned.\n     */\n    REQUIRED: 2,\n\n    /**\n     * Term's presence in a document is prohibited, documents that do contain\n     * this term will not be returned.\n     */\n    PROHIBITED: 3\n  };\n  /**\n   * A single clause in a {@link lunr.Query} contains a term and details on how to\n   * match that term against a {@link lunr.Index}.\n   *\n   * @typedef {Object} lunr.Query~Clause\n   * @property {string[]} fields - The fields in an index this clause should be matched against.\n   * @property {number} [boost=1] - Any boost that should be applied when matching this clause.\n   * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.\n   * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.\n   * @property {number} [wildcard=lunr.Query.wildcard.NONE] - Whether the term should have wildcards appended or prepended.\n   * @property {number} [presence=lunr.Query.presence.OPTIONAL] - The terms presence in any matching documents.\n   */\n\n  /**\n   * Adds a {@link lunr.Query~Clause} to this query.\n   *\n   * Unless the clause contains the fields to be matched all fields will be matched. In addition\n   * a default boost of 1 is applied to the clause.\n   *\n   * @param {lunr.Query~Clause} clause - The clause to add to this query.\n   * @see lunr.Query~Clause\n   * @returns {lunr.Query}\n   */\n\n  lunr.Query.prototype.clause = function (clause) {\n    if (!('fields' in clause)) {\n      clause.fields = this.allFields;\n    }\n\n    if (!('boost' in clause)) {\n      clause.boost = 1;\n    }\n\n    if (!('usePipeline' in clause)) {\n      clause.usePipeline = true;\n    }\n\n    if (!('wildcard' in clause)) {\n      clause.wildcard = lunr.Query.wildcard.NONE;\n    }\n\n    if (clause.wildcard & lunr.Query.wildcard.LEADING && clause.term.charAt(0) != lunr.Query.wildcard) {\n      clause.term = \"*\" + clause.term;\n    }\n\n    if (clause.wildcard & lunr.Query.wildcard.TRAILING && clause.term.slice(-1) != lunr.Query.wildcard) {\n      clause.term = \"\" + clause.term + \"*\";\n    }\n\n    if (!('presence' in clause)) {\n      clause.presence = lunr.Query.presence.OPTIONAL;\n    }\n\n    this.clauses.push(clause);\n    return this;\n  };\n  /**\n   * A negated query is one in which every clause has a presence of\n   * prohibited. These queries require some special processing to return\n   * the expected results.\n   *\n   * @returns boolean\n   */\n\n\n  lunr.Query.prototype.isNegated = function () {\n    for (var i = 0; i < this.clauses.length; i++) {\n      if (this.clauses[i].presence != lunr.Query.presence.PROHIBITED) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}\n   * to the list of clauses that make up this query.\n   *\n   * The term is used as is, i.e. no tokenization will be performed by this method. Instead conversion\n   * to a token or token-like string should be done before calling this method.\n   *\n   * The term will be converted to a string by calling `toString`. Multiple terms can be passed as an\n   * array, each term in the array will share the same options.\n   *\n   * @param {object|object[]} term - The term(s) to add to the query.\n   * @param {object} [options] - Any additional properties to add to the query clause.\n   * @returns {lunr.Query}\n   * @see lunr.Query#clause\n   * @see lunr.Query~Clause\n   * @example <caption>adding a single term to a query</caption>\n   * query.term(\"foo\")\n   * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>\n   * query.term(\"foo\", {\n   *   fields: [\"title\"],\n   *   boost: 10,\n   *   wildcard: lunr.Query.wildcard.TRAILING\n   * })\n   * @example <caption>using lunr.tokenizer to convert a string to tokens before using them as terms</caption>\n   * query.term(lunr.tokenizer(\"foo bar\"))\n   */\n\n\n  lunr.Query.prototype.term = function (term, options) {\n    if (Array.isArray(term)) {\n      term.forEach(function (t) {\n        this.term(t, lunr.utils.clone(options));\n      }, this);\n      return this;\n    }\n\n    var clause = options || {};\n    clause.term = term.toString();\n    this.clause(clause);\n    return this;\n  };\n\n  lunr.QueryParseError = function (message, start, end) {\n    this.name = \"QueryParseError\";\n    this.message = message;\n    this.start = start;\n    this.end = end;\n  };\n\n  lunr.QueryParseError.prototype = new Error();\n\n  lunr.QueryLexer = function (str) {\n    this.lexemes = [];\n    this.str = str;\n    this.length = str.length;\n    this.pos = 0;\n    this.start = 0;\n    this.escapeCharPositions = [];\n  };\n\n  lunr.QueryLexer.prototype.run = function () {\n    var state = lunr.QueryLexer.lexText;\n\n    while (state) {\n      state = state(this);\n    }\n  };\n\n  lunr.QueryLexer.prototype.sliceString = function () {\n    var subSlices = [],\n        sliceStart = this.start,\n        sliceEnd = this.pos;\n\n    for (var i = 0; i < this.escapeCharPositions.length; i++) {\n      sliceEnd = this.escapeCharPositions[i];\n      subSlices.push(this.str.slice(sliceStart, sliceEnd));\n      sliceStart = sliceEnd + 1;\n    }\n\n    subSlices.push(this.str.slice(sliceStart, this.pos));\n    this.escapeCharPositions.length = 0;\n    return subSlices.join('');\n  };\n\n  lunr.QueryLexer.prototype.emit = function (type) {\n    this.lexemes.push({\n      type: type,\n      str: this.sliceString(),\n      start: this.start,\n      end: this.pos\n    });\n    this.start = this.pos;\n  };\n\n  lunr.QueryLexer.prototype.escapeCharacter = function () {\n    this.escapeCharPositions.push(this.pos - 1);\n    this.pos += 1;\n  };\n\n  lunr.QueryLexer.prototype.next = function () {\n    if (this.pos >= this.length) {\n      return lunr.QueryLexer.EOS;\n    }\n\n    var char = this.str.charAt(this.pos);\n    this.pos += 1;\n    return char;\n  };\n\n  lunr.QueryLexer.prototype.width = function () {\n    return this.pos - this.start;\n  };\n\n  lunr.QueryLexer.prototype.ignore = function () {\n    if (this.start == this.pos) {\n      this.pos += 1;\n    }\n\n    this.start = this.pos;\n  };\n\n  lunr.QueryLexer.prototype.backup = function () {\n    this.pos -= 1;\n  };\n\n  lunr.QueryLexer.prototype.acceptDigitRun = function () {\n    var char, charCode;\n\n    do {\n      char = this.next();\n      charCode = char.charCodeAt(0);\n    } while (charCode > 47 && charCode < 58);\n\n    if (char != lunr.QueryLexer.EOS) {\n      this.backup();\n    }\n  };\n\n  lunr.QueryLexer.prototype.more = function () {\n    return this.pos < this.length;\n  };\n\n  lunr.QueryLexer.EOS = 'EOS';\n  lunr.QueryLexer.FIELD = 'FIELD';\n  lunr.QueryLexer.TERM = 'TERM';\n  lunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE';\n  lunr.QueryLexer.BOOST = 'BOOST';\n  lunr.QueryLexer.PRESENCE = 'PRESENCE';\n\n  lunr.QueryLexer.lexField = function (lexer) {\n    lexer.backup();\n    lexer.emit(lunr.QueryLexer.FIELD);\n    lexer.ignore();\n    return lunr.QueryLexer.lexText;\n  };\n\n  lunr.QueryLexer.lexTerm = function (lexer) {\n    if (lexer.width() > 1) {\n      lexer.backup();\n      lexer.emit(lunr.QueryLexer.TERM);\n    }\n\n    lexer.ignore();\n\n    if (lexer.more()) {\n      return lunr.QueryLexer.lexText;\n    }\n  };\n\n  lunr.QueryLexer.lexEditDistance = function (lexer) {\n    lexer.ignore();\n    lexer.acceptDigitRun();\n    lexer.emit(lunr.QueryLexer.EDIT_DISTANCE);\n    return lunr.QueryLexer.lexText;\n  };\n\n  lunr.QueryLexer.lexBoost = function (lexer) {\n    lexer.ignore();\n    lexer.acceptDigitRun();\n    lexer.emit(lunr.QueryLexer.BOOST);\n    return lunr.QueryLexer.lexText;\n  };\n\n  lunr.QueryLexer.lexEOS = function (lexer) {\n    if (lexer.width() > 0) {\n      lexer.emit(lunr.QueryLexer.TERM);\n    }\n  }; // This matches the separator used when tokenising fields\n  // within a document. These should match otherwise it is\n  // not possible to search for some tokens within a document.\n  //\n  // It is possible for the user to change the separator on the\n  // tokenizer so it _might_ clash with any other of the special\n  // characters already used within the search string, e.g. :.\n  //\n  // This means that it is possible to change the separator in\n  // such a way that makes some words unsearchable using a search\n  // string.\n\n\n  lunr.QueryLexer.termSeparator = lunr.tokenizer.separator;\n\n  lunr.QueryLexer.lexText = function (lexer) {\n    while (true) {\n      var char = lexer.next();\n\n      if (char == lunr.QueryLexer.EOS) {\n        return lunr.QueryLexer.lexEOS;\n      } // Escape character is '\\'\n\n\n      if (char.charCodeAt(0) == 92) {\n        lexer.escapeCharacter();\n        continue;\n      }\n\n      if (char == \":\") {\n        return lunr.QueryLexer.lexField;\n      }\n\n      if (char == \"~\") {\n        lexer.backup();\n\n        if (lexer.width() > 0) {\n          lexer.emit(lunr.QueryLexer.TERM);\n        }\n\n        return lunr.QueryLexer.lexEditDistance;\n      }\n\n      if (char == \"^\") {\n        lexer.backup();\n\n        if (lexer.width() > 0) {\n          lexer.emit(lunr.QueryLexer.TERM);\n        }\n\n        return lunr.QueryLexer.lexBoost;\n      } // \"+\" indicates term presence is required\n      // checking for length to ensure that only\n      // leading \"+\" are considered\n\n\n      if (char == \"+\" && lexer.width() === 1) {\n        lexer.emit(lunr.QueryLexer.PRESENCE);\n        return lunr.QueryLexer.lexText;\n      } // \"-\" indicates term presence is prohibited\n      // checking for length to ensure that only\n      // leading \"-\" are considered\n\n\n      if (char == \"-\" && lexer.width() === 1) {\n        lexer.emit(lunr.QueryLexer.PRESENCE);\n        return lunr.QueryLexer.lexText;\n      }\n\n      if (char.match(lunr.QueryLexer.termSeparator)) {\n        return lunr.QueryLexer.lexTerm;\n      }\n    }\n  };\n\n  lunr.QueryParser = function (str, query) {\n    this.lexer = new lunr.QueryLexer(str);\n    this.query = query;\n    this.currentClause = {};\n    this.lexemeIdx = 0;\n  };\n\n  lunr.QueryParser.prototype.parse = function () {\n    this.lexer.run();\n    this.lexemes = this.lexer.lexemes;\n    var state = lunr.QueryParser.parseClause;\n\n    while (state) {\n      state = state(this);\n    }\n\n    return this.query;\n  };\n\n  lunr.QueryParser.prototype.peekLexeme = function () {\n    return this.lexemes[this.lexemeIdx];\n  };\n\n  lunr.QueryParser.prototype.consumeLexeme = function () {\n    var lexeme = this.peekLexeme();\n    this.lexemeIdx += 1;\n    return lexeme;\n  };\n\n  lunr.QueryParser.prototype.nextClause = function () {\n    var completedClause = this.currentClause;\n    this.query.clause(completedClause);\n    this.currentClause = {};\n  };\n\n  lunr.QueryParser.parseClause = function (parser) {\n    var lexeme = parser.peekLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    switch (lexeme.type) {\n      case lunr.QueryLexer.PRESENCE:\n        return lunr.QueryParser.parsePresence;\n\n      case lunr.QueryLexer.FIELD:\n        return lunr.QueryParser.parseField;\n\n      case lunr.QueryLexer.TERM:\n        return lunr.QueryParser.parseTerm;\n\n      default:\n        var errorMessage = \"expected either a field or a term, found \" + lexeme.type;\n\n        if (lexeme.str.length >= 1) {\n          errorMessage += \" with value '\" + lexeme.str + \"'\";\n        }\n\n        throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n  };\n\n  lunr.QueryParser.parsePresence = function (parser) {\n    var lexeme = parser.consumeLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    switch (lexeme.str) {\n      case \"-\":\n        parser.currentClause.presence = lunr.Query.presence.PROHIBITED;\n        break;\n\n      case \"+\":\n        parser.currentClause.presence = lunr.Query.presence.REQUIRED;\n        break;\n\n      default:\n        var errorMessage = \"unrecognised presence operator'\" + lexeme.str + \"'\";\n        throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    var nextLexeme = parser.peekLexeme();\n\n    if (nextLexeme == undefined) {\n      var errorMessage = \"expecting term or field, found nothing\";\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.FIELD:\n        return lunr.QueryParser.parseField;\n\n      case lunr.QueryLexer.TERM:\n        return lunr.QueryParser.parseTerm;\n\n      default:\n        var errorMessage = \"expecting term or field, found '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  };\n\n  lunr.QueryParser.parseField = function (parser) {\n    var lexeme = parser.consumeLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    if (parser.query.allFields.indexOf(lexeme.str) == -1) {\n      var possibleFields = parser.query.allFields.map(function (f) {\n        return \"'\" + f + \"'\";\n      }).join(', '),\n          errorMessage = \"unrecognised field '\" + lexeme.str + \"', possible fields: \" + possibleFields;\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    parser.currentClause.fields = [lexeme.str];\n    var nextLexeme = parser.peekLexeme();\n\n    if (nextLexeme == undefined) {\n      var errorMessage = \"expecting term, found nothing\";\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.TERM:\n        return lunr.QueryParser.parseTerm;\n\n      default:\n        var errorMessage = \"expecting term, found '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  };\n\n  lunr.QueryParser.parseTerm = function (parser) {\n    var lexeme = parser.consumeLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    parser.currentClause.term = lexeme.str.toLowerCase();\n\n    if (lexeme.str.indexOf(\"*\") != -1) {\n      parser.currentClause.usePipeline = false;\n    }\n\n    var nextLexeme = parser.peekLexeme();\n\n    if (nextLexeme == undefined) {\n      parser.nextClause();\n      return;\n    }\n\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.TERM:\n        parser.nextClause();\n        return lunr.QueryParser.parseTerm;\n\n      case lunr.QueryLexer.FIELD:\n        parser.nextClause();\n        return lunr.QueryParser.parseField;\n\n      case lunr.QueryLexer.EDIT_DISTANCE:\n        return lunr.QueryParser.parseEditDistance;\n\n      case lunr.QueryLexer.BOOST:\n        return lunr.QueryParser.parseBoost;\n\n      case lunr.QueryLexer.PRESENCE:\n        parser.nextClause();\n        return lunr.QueryParser.parsePresence;\n\n      default:\n        var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  };\n\n  lunr.QueryParser.parseEditDistance = function (parser) {\n    var lexeme = parser.consumeLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    var editDistance = parseInt(lexeme.str, 10);\n\n    if (isNaN(editDistance)) {\n      var errorMessage = \"edit distance must be numeric\";\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    parser.currentClause.editDistance = editDistance;\n    var nextLexeme = parser.peekLexeme();\n\n    if (nextLexeme == undefined) {\n      parser.nextClause();\n      return;\n    }\n\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.TERM:\n        parser.nextClause();\n        return lunr.QueryParser.parseTerm;\n\n      case lunr.QueryLexer.FIELD:\n        parser.nextClause();\n        return lunr.QueryParser.parseField;\n\n      case lunr.QueryLexer.EDIT_DISTANCE:\n        return lunr.QueryParser.parseEditDistance;\n\n      case lunr.QueryLexer.BOOST:\n        return lunr.QueryParser.parseBoost;\n\n      case lunr.QueryLexer.PRESENCE:\n        parser.nextClause();\n        return lunr.QueryParser.parsePresence;\n\n      default:\n        var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  };\n\n  lunr.QueryParser.parseBoost = function (parser) {\n    var lexeme = parser.consumeLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    var boost = parseInt(lexeme.str, 10);\n\n    if (isNaN(boost)) {\n      var errorMessage = \"boost must be numeric\";\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    parser.currentClause.boost = boost;\n    var nextLexeme = parser.peekLexeme();\n\n    if (nextLexeme == undefined) {\n      parser.nextClause();\n      return;\n    }\n\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.TERM:\n        parser.nextClause();\n        return lunr.QueryParser.parseTerm;\n\n      case lunr.QueryLexer.FIELD:\n        parser.nextClause();\n        return lunr.QueryParser.parseField;\n\n      case lunr.QueryLexer.EDIT_DISTANCE:\n        return lunr.QueryParser.parseEditDistance;\n\n      case lunr.QueryLexer.BOOST:\n        return lunr.QueryParser.parseBoost;\n\n      case lunr.QueryLexer.PRESENCE:\n        parser.nextClause();\n        return lunr.QueryParser.parsePresence;\n\n      default:\n        var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  }\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;\n\n  (function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory);\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory();\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory();\n    }\n  })(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunr;\n  });\n})();","import React from 'react'\nimport { css } from '@emotion/react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\ntype TagType = {\n  totalCount: number\n  fieldValue: string\n}\n\nexport default function Tags() {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark {\n          group(field: frontmatter___tags) {\n            totalCount\n            fieldValue\n          }\n        }\n      }\n    `\n  )\n\n  const tags = data.allMarkdownRemark.group\n  return (\n    <div css={tagWrapper}>\n      <h2>Tags</h2>\n      <div css={tagBoxStyle}>\n        {tags.map(({ totalCount, fieldValue }: TagType, idx: number) => (\n          <div key={idx} className=\"tag\">\n            <span className=\"tag__count\">{totalCount}</span>\n            <span className=\"tag__name\">{fieldValue}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nconst tagWrapper = css`\n  background: #ffffff;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  padding: 2rem;\n  font-size: 1.2rem;\n\n  h2 {\n    text-align: center;\n    margin-bottom: 1rem;\n  }\n`\n\nconst tagBoxStyle = css`\n  display: flex;\n  flex-wrap: wrap;\n  font-size: 1.3rem;\n\n  .tag {\n    background: #e1f5fe;\n    border-radius: 15px;\n    padding: 6px;\n  }\n  .tag__count {\n    background: #81d4fa;\n    border-radius: 10px;\n    padding: 2px 5px;\n    margin-right: 3px;\n  }\n  .tag__name {\n  }\n`\n","import React, { useState, useEffect } from 'react';\r\nimport { Global, css } from '@emotion/react';\r\nimport { graphql } from 'gatsby';\r\n\r\nimport Layout from '../components/Layout';\r\nimport Thumbnail from '../components/Thumbnail';\r\nimport Card from '../components/Card';\r\nimport Category from '../components/Categories';\r\nimport Tags from '../components/Tags';\r\nimport Pagenation from '../components/Pagenation';\r\nimport { PostListQuery } from '../../gatsby-type';\r\n\r\ntype Props = {\r\n  data: PostListQuery;\r\n};\r\n\r\nexport default function Home({ data }: Props) {\r\n  const totalCount = data.allMarkdownRemark.totalCount;\r\n\r\n  return (\r\n    <Layout>\r\n      <section css={sectionStyle}>\r\n        <Thumbnail\r\n          mainText=\"방문해주셔서 감사합니다.\"\r\n          subText=\"소설읽는 개발자 입니다.\"\r\n        />\r\n        <div css={contentStyle}>\r\n          <div className=\"content\">\r\n            <Card post={data} />\r\n            <Pagenation totalCount={totalCount} />\r\n          </div>\r\n          <div className=\"side\">\r\n            <Category />\r\n            <Tags />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <Global styles={globalStyle} />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport const globalStyle = css`\r\n  // --font-primary:\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  a {\r\n    color: inherit;\r\n    text-decoration: none;\r\n  }\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n    font-size: 62.5%; // 10px/16 = 62.5% -> 1rem = 10px\r\n  }\r\n\r\n  body {\r\n    // font-family: $font-primary;\r\n    background: linear-gradient(139.17deg, #f5f5f5 0%, #bdbdbd 100%), #bdbdbd;\r\n    font-weight: 300;\r\n    line-height: 1.6;\r\n  }\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 1.6rem;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: rgba(147, 161, 161, 0.75);\r\n    border-radius: 5px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background: none;\r\n  }\r\n`;\r\n\r\nconst sectionStyle = css`\r\n  grid-column: center-start / center-end;\r\n  min-height: 100rem;\r\n`;\r\n\r\nconst contentStyle = css`\r\n  margin-top: 33vh;\r\n  display: flex;\r\n\r\n  .side {\r\n    flex-basis: 50%;\r\n    padding: 1rem;\r\n\r\n    height: 100%;\r\n    position: sticky;\r\n    top: 100px;\r\n  }\r\n`;\r\n\r\nexport const query = graphql`\r\n  query PostList($skip: Int) {\r\n    allMarkdownRemark(\r\n      sort: { fields: frontmatter___date, order: DESC }\r\n      limit: 5\r\n      skip: $skip\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n            featuredImage {\r\n              childImageSharp {\r\n                fluid(maxWidth: 120, maxHeight: 120) {\r\n                  src\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\n\nfunction invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n\n  if (isProduction) {\n    throw new Error(prefix);\n  }\n\n  throw new Error(prefix + \": \" + (message || ''));\n}\n\nexport default invariant;","import React, { useState, useCallback, useEffect } from 'react';\nimport { css } from '@emotion/react';\nimport { useLunr } from 'react-lunr';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\n\ntype SearchModalProps = {\n  query: string;\n  onCloseModal: () => void;\n};\n\ntype SearchResultType = {\n  id: string;\n  title: string;\n  slug: string;\n};\n\nexport default function SearchModal({ query, onCloseModal }: SearchModalProps) {\n  const queryData = useStaticQuery(graphql`\n    query {\n      localSearchPages {\n        index\n        store\n      }\n    }\n  `);\n  const index = queryData.localSearchPages.index;\n  const store = queryData.localSearchPages.store;\n\n  const [queryModal, setQueryModal] = useState(query);\n  const [searchResult, setSearchResult] = useState<SearchResultType[]>([]);\n  const results = useLunr<SearchResultType>(queryModal, index, store);\n\n  // 최초 모달 실행시 넘겨받은 query 를 이용한 검색결과 보여줌\n  useEffect(() => {\n    setSearchResult(results);\n  }, []);\n\n  const onChangeQuery = useCallback((e) => {\n    setQueryModal(e.target.value);\n  }, []);\n\n  // 모달 입력창을 통해 검색시 검색결과 보여줌\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      setSearchResult(results);\n\n      setQueryModal('');\n    },\n    [results]\n  );\n\n  const stopPropagation = useCallback((e) => {\n    e.stopPropagation();\n  }, []);\n\n  return (\n    <div css={SearchModalWrapper} onClick={onCloseModal}>\n      <div css={SearchModalStyle} onClick={stopPropagation}>\n        <h1>🔎포스팅 검색하기</h1>\n        <form onSubmit={onSubmit} css={SearchFormStyle}>\n          <input\n            name=\"query\"\n            value={queryModal}\n            onChange={onChangeQuery}\n            placeholder=\"검색어를 입력하세요.\"\n          />\n        </form>\n        <div css={SearchResultWrapper}>\n          {searchResult.map((data) => (\n            <div className=\"search-result\">\n              <Link to={`${data.slug}`}>{data.title}</Link>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst SearchModalWrapper = css`\n  position: fixed;\n  z-index: 1300;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.4);\n`;\n\nconst SearchModalStyle = css`\n  position: absolute;\n  top: 40%;\n  left: 50%;\n  /* 50%, 50%만큼 이동시켰다가 다시 거기서 -50%, -50%만큼 이동시켜버리네. 그래서 정확히 가운데가 됨. 이건 개꿀팀이다. */\n  transform: translate(-50%, -50%);\n  text-align: center;\n\n  min-width: 60rem;\n  background: white;\n  padding: 3rem;\n  border-radius: 20px;\n\n  h1 {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst SearchFormStyle = css`\n  input {\n    width: 100%;\n    border: 2px solid gray;\n    padding: 1rem;\n  }\n`;\n\nconst SearchResultWrapper = css`\n  margin: 3rem 0;\n\n  .search-result {\n    padding: 1.5rem 10px;\n    text-align: left;\n    border: 1px solid gray;\n    margin: 1.5rem 0;\n\n    font-size: 1.6rem;\n    font-weight: bold;\n  }\n`;\n","import { useMemo } from 'react';\nimport { Index } from 'lunr';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nvar useLunr = function useLunr(query, rawIndex, rawStore) {\n  var index = useMemo(function () {\n    if (rawIndex === undefined || rawIndex === null) {\n      process.env.NODE_ENV !== \"production\" ? warning(rawIndex !== undefined && rawIndex !== null, 'No index was provided. Results will always be empty.') : void 0;\n      return;\n    }\n\n    if (rawIndex instanceof Index) return rawIndex;\n    if (typeof rawIndex === 'string') return Index.load(JSON.parse(rawIndex));\n    if (typeof rawIndex === 'object') return Index.load(rawIndex);\n    process.env.NODE_ENV !== \"production\" ? invariant(false, 'Invalid index provided. Please provide an instance of Lunr.Index or exported JSON or string index.') : invariant(false);\n  }, [rawIndex]);\n  var store = useMemo(function () {\n    if (typeof rawStore === 'string') return JSON.parse(rawStore);\n    return rawStore;\n  }, [rawStore]);\n  return useMemo(function () {\n    if (!query || !index) return [];\n    var results = typeof query === 'string' ? index.search(query) : index.query(query);\n    if (store) return results.map(function (_ref) {\n      var ref = _ref.ref;\n      return store[ref];\n    });\n    return results;\n  }, [query, index, store]);\n};\n\nexport { useLunr };","import React, { useState, useCallback } from 'react';\nimport { css } from '@emotion/react';\nimport { Link } from 'gatsby';\nimport SearchModal from '../SearchModal';\n\nexport default function Header() {\n  const [query, setQuery] = useState('');\n  const [modal, setModal] = useState(false);\n\n  const onChangeQuery = useCallback((e) => {\n    setQuery(e.target.value);\n  }, []);\n\n  const onSubmit = useCallback((e) => {\n    e.preventDefault();\n    setModal(true);\n  }, []);\n\n  const onCloseModal = useCallback(() => {\n    setModal(false);\n  }, []);\n\n  return (\n    <header css={HeaderStyle}>\n      <div css={HeaderBoxStyle}>\n        <Link to=\"/\">\n          <img src=\"/Image/Logo.png\" css={LogoStyle} />\n        </Link>\n\n        <ul css={UlStyle}>\n          <li>Home</li>\n          <li>Categoies</li>\n          <li>Tags</li>\n          <li>About</li>\n        </ul>\n        <form onSubmit={onSubmit} css={formStyle}>\n          <input\n            name=\"query\"\n            value={query}\n            onChange={onChangeQuery}\n            placeholder=\"검색하기🔎\"\n          />\n        </form>\n        {modal && <SearchModal query={query} onCloseModal={onCloseModal} />}\n      </div>\n    </header>\n  );\n}\n\nconst HeaderStyle = css`\n  grid-column: full-start / full-end;\n  height: 8vh;\n\n  position: sticky;\n  top: 0px;\n\n  z-index: 10;\n  box-shadow: rgb(0 0 0 / 8%) 0px 0px 8px;\n\n  backdrop-filter: blur(3px);\n  background-color: rgba(255, 255, 255, 0.562);\n`;\nconst HeaderBoxStyle = css`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  max-width: 120rem;\n  height: 100%;\n  margin: 0 auto;\n`;\n\nconst LogoStyle = css`\n  max-height: 10rem;\n  max-width: 25rem;\n`;\n\nconst UlStyle = css`\n  flex: 1 0 0;\n  list-style: none;\n  font-size: 1.8rem;\n\n  display: flex;\n  justify-content: space-around;\n  padding: 0 10rem;\n`;\n\nconst formStyle = css`\n  input {\n    padding: 0.5rem;\n  }\n`;\n","import React from 'react';\nimport { css } from '@emotion/react';\n\nexport default function Footer() {\n  return (\n    <footer css={FooterStyle}>\n      <div css={FooterBoxStyle}>\n        <div css={AboutStyle}>\n          <img src=\"/Image/User.jpg\" />\n          <div css={AboutBoxStyle}>\n            <h3>소설읽는 개발자</h3>\n            <p>\n              개발을 잘하기 위해서가 아닌 개발을 즐기기 위해 노력하는\n              개발자입니다. 사소한 생각 정리부터 튜토리얼, 삽질기 정도를 주로\n              끄적이고 있습니다.\n            </p>\n            <div className=\"icon_box\">\n              <img src=\"/svg/github.svg\" />\n              <img src=\"/svg/email.svg\" />\n              <img src=\"/svg/blogger.svg\" />\n              <img src=\"/svg/notion.svg\" />\n            </div>\n          </div>\n        </div>\n        <p className=\"copyright\">© 2021 소설읽는개발자 Powered by Gatsby</p>\n      </div>\n    </footer>\n  );\n}\n\nconst FooterStyle = css`\n  grid-column: full-start / full-end;\n  background-color: #37474f;\n  color: white;\n  font-size: 1.4rem;\n`;\nconst FooterBoxStyle = css`\n  max-width: 120rem;\n  margin: 0 auto;\n  padding: 3rem;\n\n  .copyright {\n    letter-spacing: 2px;\n    text-align: center;\n  }\n`;\n\nconst AboutStyle = css`\n  display: flex;\n  flex-direction: row;\n\n  margin-bottom: 2rem;\n\n  img {\n    border-radius: 15px;\n  }\n`;\n\nconst AboutBoxStyle = css`\n  padding: 0 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  h3 {\n    font-size: 2rem;\n  }\n\n  p {\n    flex-basis: 50%;\n  }\n`;\n","import React from 'react'\nimport { css } from '@emotion/react'\n\nimport Header from '../Header'\nimport Footer from '../Footer'\n\ntype LayoutProps = {\n  children: React.ReactNode\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  return (\n    <div css={containerStyle}>\n      <Header />\n      {children}\n      <Footer />\n    </div>\n  )\n}\n\nconst containerStyle = css`\n  display: grid;\n  grid-template-columns:\n    [full-start] minmax(6rem, 1fr) [center-start] repeat(\n      8,\n      [col-start] minmax(min-content, 15rem) [col-end]\n    )\n    [center-end] minmax(6rem, 1fr) [full-end];\n\n  min-height: 100vh;\n`\n","import React from 'react';\nimport { css } from '@emotion/react';\nimport { Link } from 'gatsby';\nimport { PostListQuery } from '../../../gatsby-type';\n\ntype Props = {\n  post: PostListQuery;\n};\n\nexport default function Cards({ post }: Props) {\n  const data = post;\n\n  return (\n    <div css={articleWrapper}>\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <Link to={node.fields?.slug as string} key={node.id}>\n          <article css={articleStyle} key={node.id}>\n            <img\n              src={\n                node.frontmatter?.featuredImage?.childImageSharp?.fluid\n                  ?.src as string\n              }\n            />\n            <div css={articleTextBoxStyle}>\n              <h2>{node.frontmatter?.title}</h2>\n              <p>{node.excerpt}</p>\n              <p>{node.frontmatter?.date}</p>\n            </div>\n          </article>\n        </Link>\n      ))}\n    </div>\n  );\n}\n\nconst articleWrapper = css`\n  padding: 1rem;\n`;\n\nconst articleStyle = css`\n  background: #ffffff;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 20px;\n  padding: 2rem;\n  margin-bottom: 1.5rem;\n\n  display: flex;\n\n  /* img {\n    border-radius: 20px;\n  } */\n`;\nconst articleTextBoxStyle = css`\n  /* display: flex;\n  flex-direction: column;\n  justify-content: space-between; */\n  padding: 0 1.5rem;\n  font-size: 1.2rem;\n\n  > * {\n    margin-bottom: 0.6rem;\n  }\n`;\n","import React from 'react';\nimport { css } from '@emotion/react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\n\ntype CategoryType = {\n  totalCount: number;\n  fieldValue: string;\n};\n\nexport default function Category() {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark {\n          group(field: frontmatter___category) {\n            totalCount\n            fieldValue\n          }\n        }\n      }\n    `\n  );\n\n  const categories = data.allMarkdownRemark.group;\n  return (\n    <div css={categoryWrapper}>\n      <h2>카테고리</h2>\n      {categories.map(\n        ({ totalCount, fieldValue }: CategoryType, idx: number) => (\n          <Link to={`/category/${fieldValue}`} key={idx} css={categoryStyle}>\n            <p className=\"category__name\">{fieldValue}</p>\n            <p className=\"category__count\">{totalCount}</p>\n          </Link>\n        )\n      )}\n    </div>\n  );\n}\n\nconst categoryWrapper = css`\n  background: #ffffff;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  padding: 2rem;\n  margin-bottom: 3rem;\n  font-size: 1.2rem;\n\n  h2 {\n    text-align: center;\n    margin-bottom: 1rem;\n  }\n`;\nconst categoryStyle = css`\n  display: flex;\n  font-size: 1.6rem;\n  padding: 0.5rem;\n\n  &:hover {\n    text-decoration: none;\n    background-color: rgba(0, 0, 0, 0.04);\n  }\n\n  .category__name {\n    flex: 1 0 0;\n  }\n\n  .category__count {\n    background: #81d4fa;\n    border-radius: 25px;\n    width: 25px;\n    height: 25px;\n    text-align: center;\n    color: white;\n  }\n`;\n"],"sourceRoot":""}